<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="teipublisher_odds.xsd"?><TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en"><teiHeader><fileDesc>
            <titleStmt><title>ODD PEC</title></titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc><encodingDesc><tagsDecl/></encodingDesc><revisionDesc>
            <change when="2020-11-06+01:00">Initial version</change>
        </revisionDesc></teiHeader><text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="myodd" source="teipublisher.odd"> 
            <elementSpec ident="pb" mode="change"><model output="latex" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve">\newpage
\fancyhf{}</pb:template>
        </model><model output="fo" predicate="following-sibling::note[@type=&#34;foliation&#34;]" behaviour="block">
            <outputRendition xml:space="preserve">
            margin: 5%;
            </outputRendition>
        </model><model output="print" behaviour="block">
            <param name="break-after" value="'page'"/>
            <outputRendition xml:space="preserve">
            break-after:'page';
            </outputRendition>
        </model><model behaviour="webcomponent" cssClass="facs">
            <param name="name" value="'pb-facs-link'"/>
            <param name="facs" value="replace(@facs, '^iiif:(.*)$', '$1')"/>
            <param name="content" value="@n"/>
            <outputRendition xml:space="preserve">
            font-size: 16px;
            color: #888888;
            cursor: pointer;
            display: inline;
            display: block;
            margin-right: -32px;
            float: right;
            </outputRendition>
        </model><model behaviour="omit" useSourceRendition="true">
            <param name="type" value="'page'"/>
            <param name="label" value="(concat(if(@n) then concat(@n,' ') else '',if(@facs) then                   concat('@',@facs) else ''))"/>
            <outputRendition xml:space="preserve">
            display: block; margin-left: 4pt; color: grey; float: right;
            </outputRendition>
            <outputRendition xml:space="preserve" scope="before">
            content: '[Page ';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: ']';
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="note" mode="change"><modelSequence output="latex">
            <model predicate="@place=&#34;top-margin-left&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\fancyhead[L]{[[content]]}</pb:template>
            </model>
            <model predicate="@place=&#34;bottom-right&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\fancyfoot[R]{[[content]]}</pb:template>
            </model>
            <model predicate="@place=&#34;bottom-left&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\fancyfoot[L]{[[content]]}</pb:template>
            </model>
            <model predicate="@resp" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\footnote{[[content]]}</pb:template>
            </model>
            <model predicate="@place=&#34;top-margin-right&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\fancyhead[R]{[[content]]}</pb:template>
            </model>
            <model predicate="@place=&#34;top&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\fancyhead[C]{[[content]]}</pb:template>
            </model>
            <model predicate="@hand and not(@type=&#34;foliation&#34;)" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\textsf{\hl{[[content]]}}</pb:template>
            </model>
        </modelSequence><modelSequence output="epub">
            <model predicate="@hand and not(@type=&#34;foliation&#34;)" behaviour="inline">
                <outputRendition xml:space="preserve">
                                font-family: cursive;
color: #9D9D9D;                </outputRendition>
            </model>
            <model predicate="@resp" behaviour="note">
                <param name="content" value="p[1]"/>
            </model>
            <model predicate="@type=&#34;foliation&#34;" behaviour="block">
                <param name="content" value="."/>
                <outputRendition xml:space="preserve">
                                text-align:center;
margin:10px;                </outputRendition>
            </model>
        </modelSequence><modelSequence output="print">
            <model predicate="@hand" behaviour="inline">
                <outputRendition xml:space="preserve">
                               font-family: cursive;
color: #9D9D9D;
display: block;               
                </outputRendition>
            </model>
            <model predicate="@resp" behaviour="note">
                <param name="content" value="p[1]"/>
            </model>
            <model predicate="@type=&#34;foliation&#34;" behaviour="block">
                <param name="content" value="."/>
                <outputRendition xml:space="preserve">
                              
                text-align:center;
margin:10px;               
               
                </outputRendition>
            </model>
        </modelSequence><modelSequence predicate="$parameters?mode=&#34;original&#34;">
            <model predicate="@type=&#34;foliation&#34;" behaviour="block">
                <param name="rend" value="if (@rend=&#34;align(center)&#34; or (@place=&#34;top&#34;)) then 'text-align:center;' else  (if ((@rend=&#34;align(right)&#34;)) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
                <pb:template xmlns="" xml:space="preserve"><div style="[[rend]]">[[content]]</div></pb:template>
                <outputRendition xml:space="preserve">
                margin: 1em;
                </outputRendition>
            </model>
            <model predicate="@resp" behaviour="note">
                <param name="content" value="if (p[@xml:lang=&#34;en&#34;]) then (p[@xml:lang=&#34;en&#34;]) else ."/>
            </model>
            <model predicate="@type=&#34;gloss&#34;" behaviour="note"/>
            <model predicate="@hand and not(@type=&#34;foliation&#34;)" behaviour="block">
                <param name="rend" value="if (@rend=&#34;align(center)&#34; or (@place=&#34;top&#34;)) then 'text-align:center;' else  (if ((@rend=&#34;align(right)&#34;)) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
                <pb:template xmlns="" xml:space="preserve"><div style="[[rend]]">[[content]]</div></pb:template>
            </model>
        </modelSequence><modelSequence predicate="$parameters?mode=&#34;entities&#34;">
            <model predicate="@type=&#34;foliation&#34;" behaviour="block">
                <param name="rend" value="if (@rend=&#34;align(center)&#34; or (@place=&#34;top&#34;)) then 'text-align:center;' else  (if ((@rend=&#34;align(right)&#34;)) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
                <pb:template xmlns="" xml:space="preserve"><div style="[[rend]]">[[content]]</div></pb:template>
                <outputRendition xml:space="preserve">
                margin: 1em;
                </outputRendition>
            </model>
            <model predicate="@resp or @type=&#34;gloss&#34;" behaviour="omit"/>
            <model predicate="@hand and not(@type=&#34;foliation&#34;)" behaviour="block">
                <param name="rend" value="if (@rend=&#34;align(center)&#34; or (@place=&#34;top&#34;)) then 'text-align:center;' else  (if ((@rend=&#34;align(right)&#34;)) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
                <pb:template xmlns="" xml:space="preserve"><div style="[[rend]]">[[content]]</div></pb:template>
            </model>
        </modelSequence><modelSequence predicate="$parameters?mode=&#34;corrections&#34;">
            <model predicate="@hand" behaviour="alternate">
                <param name="default" value="."/>
                <param name="alternate" value="concat(&#34;Additions made by: &#34;, id(substring-after(@hand, '#'), root($parameters?root))/p[@xml:lang=&#34;en&#34;])"/>
                <outputRendition xml:space="preserve">
                                                              font-family: cursive;
color: #9D9D9D;
display: block;                                              </outputRendition>
            </model>
            <model predicate="@type=&#34;foliation&#34; and not(@hand)" behaviour="block">
                <param name="rend" value="if (@rend=&#34;align(center)&#34; or (@place=&#34;top&#34;)) then 'text-align:center;' else  (if ((@rend=&#34;align(right)&#34;)) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
                <pb:template xmlns="" xml:space="preserve"><div style="[[rend]]">[[content]]</div></pb:template>
                <outputRendition xml:space="preserve">
                margin: 1em;
                </outputRendition>
            </model>
            <model predicate="@resp or @type=&#34;gloss&#34;" behaviour="omit"/>
        </modelSequence></elementSpec>
                <elementSpec ident="title" mode="change"><model predicate="$parameters?mode='facets'" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="subscribe" value="'letter'"/>
            <param name="emit" value="'facets'"/>
            <param name="content" value="if (@type=&#34;pec&#34;) then id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/pec/index/Index_biblio.xml&#34;)) else (if (@type=&#34;bi&#34;) then id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/bi/index/Werkindex.xml&#34;)) else (if (@type=&#34;ehri&#34;) then id(substring-after(@ref, '#'), root($parameters?root)) else ''))"/>
            <outputRendition xml:space="preserve">
            margin-bottom: 1em;
display: block; 
            </outputRendition>
        </model><model predicate="$parameters?mode='entities' and (@type=&#34;bi&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/bi/index/Werkindex.xml&#34;))) or (@type=&#34;pec&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/pec/index/Index_biblio.xml&#34;))) or (@type=&#34;ehri&#34; and id(substring-after(@ref, '#'), root($parameters?root)))" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="content" value="."/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'letter'"/>
            <outputRendition xml:space="preserve">
            
                        font-weight: bold;
cursor: pointer;            
            
            </outputRendition>
        </model><modelGrp output="latex">
            <model predicate="contains(@rend,&#34;underline&#34;)" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\uline{[[content]]}</pb:template>
            </model>
            <model predicate="contains(@rend,&#34;align(center)&#34;)" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\begin{center}
[[content]]
\end{center}</pb:template>
            </model>
            <model predicate="contains(@rend,&#34;align(left)&#34;)" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\begin{flushleft}
[[content]]
\end{flushleft}</pb:template>
            </model>
            <model predicate="contains(@rend,&#34;align(right)&#34;)" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\begin{flushright}
[[content]]
\end{flushright}</pb:template>
            </model>
            <model predicate="not(@rend)" behaviour="inline"/>
        </modelGrp><modelSequence output="latex">
            <model predicate="@rend=&#34;align(right) underline&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\begin{flushright}
\uline{[[content]]}
\end{flushright}</pb:template>
            </model>
            <model predicate="@rend=&#34;align(right)&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\begin{flushright}
[[content]]
\end{flushright}</pb:template>
            </model>
            <model predicate="@rend=&#34;align(center) underline&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\begin{center}
\uline{[[content]]}
\end{center}</pb:template>
            </model>
            <model predicate="@rend=&#34;align(center)&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\begin{center}
[[content]]
\end{center}</pb:template>
            </model>
            <model predicate="not(@rend)" behaviour="inline"/>
        </modelSequence><modelSequence output="print">
            <model predicate="@rend=&#34;align(right) underline&#34;" behaviour="block">
                <param name="content" value="."/>
                <outputRendition xml:space="preserve">
                                                text-align: right;
padding: 2em;                                </outputRendition>
                <outputRendition xml:space="preserve">
                text-decoration: underline;
                </outputRendition>
            </model>
            <model predicate="@rend=&#34;align(right)&#34;" behaviour="block">
                <param name="content" value="."/>
                <outputRendition xml:space="preserve">
                                                                text-align: right;
padding: 2em;                                                </outputRendition>
            </model>
            <model predicate="@rend=&#34;align(center) underline&#34;" behaviour="block">
                <param name="content" value="."/>
                <outputRendition xml:space="preserve">
                                                text-align: center;
padding: 2em;                                </outputRendition>
                <outputRendition xml:space="preserve">
                text-decoration: underline;
                </outputRendition>
            </model>
            <model predicate="@rend=&#34;align(center)&#34;" behaviour="block">
                <param name="content" value="."/>
                <outputRendition xml:space="preserve">
                text-align: center;
                </outputRendition>
            </model>
            <model predicate="not(@rend)" behaviour="block"/>
        </modelSequence><model predicate="@rend=&#34;align(right) underline&#34;" behaviour="block">
            <outputRendition xml:space="preserve">
            
                                            text-align: right;
text-decoration: underline;
padding: 2em;                                
            
            </outputRendition>
        </model><model predicate="@rend=&#34;align(right)&#34;" behaviour="block">
            <outputRendition xml:space="preserve">
            
                                            text-align: right;
padding: 2em;                                
            
            </outputRendition>
        </model><model predicate="@rend=&#34;align(center) underline&#34;" behaviour="block">
            <outputRendition xml:space="preserve">
            text-align: center;
            </outputRendition>
            <outputRendition xml:space="preserve">
            text-decoration: underline;
            </outputRendition>
            <outputRendition xml:space="preserve">
            padding: 2em;
            </outputRendition>
        </model><model predicate="@rend=&#34;align(center)&#34;" behaviour="block">
            <outputRendition xml:space="preserve">
            text-align: center;
            </outputRendition>
            <outputRendition xml:space="preserve">
            padding: 2em;
            </outputRendition>
        </model><model predicate="$parameters?mode='metadata-fr'" behaviour="inline"/><model predicate="$parameters?mode='metadata-en'" behaviour="inline"/><model predicate="$parameters?header='short'" behaviour="heading">
            <param name="level" value="5"/>
        </model><modelSequence predicate="parent::titleStmt/parent::fileDesc">
            <model predicate="preceding-sibling::title" behaviour="text">
                <param name="content" value="' — '"/>
            </model>
            <model behaviour="inline"/>
        </modelSequence><model predicate="not(@level) and parent::bibl" behaviour="inline"/><modelSequence predicate="@level='m' or not(@level)">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="ancestor::biblFull" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence><modelSequence predicate="@level='s' or @level='j'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (  ancestor::biblFull)" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence><modelSequence predicate="@level='u' or @level='a'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (    ancestor::biblFull)" behaviour="text">
                <param name="content" value="'. '"/>
            </model>
        </modelSequence></elementSpec>
                <elementSpec ident="head" mode="change"><modelSequence output="latex">
            <model predicate="contains(@rend, 'center') and contains(@rend, 'underline')" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\begin{center}
\uline{[[content]]}
\end{center}</pb:template>
            </model>
        </modelSequence><modelSequence output="epub">
            <model predicate="@hand and @rend=&#34;center underline&#34;" behaviour="inline">
                <outputRendition xml:space="preserve">
                                                                                color: #9D9D9D;
font-family: cursive;
display: block;
text-align: center;
text-decoration: underline;
padding: 2em;                                                                </outputRendition>
            </model>
            <model predicate="@rend=&#34;center underline&#34; and not(@hand)" behaviour="block">
                <outputRendition xml:space="preserve">
                                                text-align: center;
text-decoration: underline;
font-size: 16px;                                </outputRendition>
            </model>
            <model predicate="not(@rend) and not(@hand)" behaviour="block"/>
        </modelSequence><modelSequence output="print">
            <model predicate="@hand and @rend=&#34;center underline&#34;" behaviour="inline">
                <outputRendition xml:space="preserve">
                                                                                color: #9D9D9D;
font-family: cursive;
display: block;
text-align: center;
text-decoration: underline;
padding: 2em;                                                                </outputRendition>
            </model>
            <model predicate="@rend=&#34;center underline&#34; and not(@hand)" behaviour="block">
                <outputRendition xml:space="preserve">
                                                text-align: center;
text-decoration: underline;
font-size: 16px;                                </outputRendition>
            </model>
            <model predicate="not(@rend) and not(@hand)" behaviour="block"/>
        </modelSequence><model predicate="@hand and $parameters?mode=&#34;corrections&#34;" behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="concat(&#34;Additions made by: &#34;, id(substring-after(@hand, '#'), root($parameters?root))/p[@xml:lang=&#34;en&#34;])"/>
            <outputRendition xml:space="preserve">
            
            
            color: #9D9D9D;
font-family: cursive;
display: block;
            
            
            </outputRendition>
        </model><model predicate="$parameters?header='short'" behaviour="inline">
            <param name="content" value="replace(string-join(.//text()[not(parent::ref)]), '^(.*?)[^\w]*$', '$1')"/>
        </model><model predicate="parent::figure" behaviour="block">
            <outputRendition xml:space="preserve">
            
                                                font-style: italic;
text-align: center;
color: #A5A5A5;
padding: 0.5em;                                
            </outputRendition>
        </model><model predicate="parent::list" behaviour="block">
            <outputRendition xml:space="preserve">
            text-align: center;
            </outputRendition>
            <outputRendition xml:space="preserve">
            padding: 1em;
            </outputRendition>
            <outputRendition xml:space="preserve">
            text-decoration: underline;
            </outputRendition>
        </model><model predicate="parent::table" behaviour="block">
            <outputRendition xml:space="preserve">
            text-align: center;
            </outputRendition>
            <outputRendition xml:space="preserve">
            padding: 1em;
            </outputRendition>
        </model><model predicate="parent::lg" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::div[@type='transcription'] or parent::div[@type='letter'] or parent::div[@type='annex']" behaviour="block">
            <param name="level" value="count(ancestor::div)"/>
            <outputRendition xml:space="preserve">
            text-align: center;
            </outputRendition>
            <outputRendition xml:space="preserve">
            text-decoration: underline;
            </outputRendition>
            <outputRendition xml:space="preserve">
            padding: 1em;
            </outputRendition>
        </model><model predicate="parent::div" behaviour="heading">
            <param name="level" value="count(ancestor::div)"/>
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model><model behaviour="block"/></elementSpec>
                <elementSpec ident="salute" mode="change"><modelSequence output="latex">
            <model predicate="@rend=&#34;align(right)&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">
\begin{flushright}
[[content]]
\end{flushright}
</pb:template>
            </model>
            <model predicate="@rend=&#34;align(center)&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">
\begin{center}
[[content]]
\end{center}
</pb:template>
            </model>
            <model predicate="@rend=&#34;align(left)&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">
\begin{flushleft}
[[content]]
\end{flushleft}
</pb:template>
            </model>
            <model predicate="@rend=&#34;indent&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">
\hspace*{10mm} [[content]]
</pb:template>
            </model>
        </modelSequence><modelSequence output="print">
            <model predicate="@rend=&#34;align(right)&#34;" behaviour="block">
                <outputRendition xml:space="preserve">
                text-align: right;
                </outputRendition>
            </model>
            <model predicate="@rend=&#34;align(center)&#34;" behaviour="block">
                <outputRendition xml:space="preserve">
                text-align: center;
                </outputRendition>
            </model>
            <model predicate="@rend=&#34;align(left)&#34;" behaviour="block">
                <outputRendition xml:space="preserve">
                text-align: left;
                </outputRendition>
            </model>
            <model predicate="@rend=&#34;indent&#34;" behaviour="block">
                <outputRendition xml:space="preserve">
                text-indent: 25%;
                </outputRendition>
            </model>
        </modelSequence><model predicate="@rend=&#34;align(right)&#34;" behaviour="block">
            <outputRendition xml:space="preserve">
            text-align: right;
            </outputRendition>
        </model><model predicate="@rend=&#34;align(center)&#34;" behaviour="block">
            <outputRendition xml:space="preserve">
            text-align: center;
            </outputRendition>
        </model><model predicate="@rend=&#34;align(left)&#34;" behaviour="block">
            <outputRendition xml:space="preserve">
            text-align: left;
            </outputRendition>
        </model><model predicate="@rend=&#34;indent&#34;" behaviour="block">
            <outputRendition xml:space="preserve">
            text-indent: 25%;
            </outputRendition>
        </model><model predicate="parent::opener or parent::closer" behaviour="inline"/></elementSpec>
                <elementSpec ident="p" mode="change"><modelSequence output="latex">
            <desc>latex rendition</desc>
            <model predicate="@rend=&#34;align(right)&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\begin{flushright}
[[content]]
\end{flushright}</pb:template>
            </model>
            <model predicate="@rend=&#34;align(center)&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\begin{center}
[[content]]
\end{center}</pb:template>
            </model>
            <model predicate="@rend=&#34;align(left)&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\begin{flushleft}
[[content]]
\end{flushleft}</pb:template>
            </model>
            <model predicate="@rend=&#34;indent&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\par \hspace*{10mm} [[content]]</pb:template>
            </model>
            <model predicate="not(@rend) and not(ancestor::teiHeader)" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\par [[content]]</pb:template>
            </model>
            <model predicate="ancestor::teiHeader" behaviour="inline"/>
        </modelSequence><modelSequence output="epub">
            <desc>epub rendition</desc>
            <model predicate="ancestor::teiHeader" behaviour="inline"/>
            <model behaviour="paragraph">
                <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if ((@rend=&#34;align(right)&#34;) or (@rend=&#34;margin(right)&#34;)) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
                <pb:template xmlns="" xml:space="preserve"><p style="[[rend]]">[[content]]</p></pb:template>
                <outputRendition xml:space="preserve">
                margin: 0 8%;
                </outputRendition>
            </model>
            <model predicate="not(@rend) and ancestor::text" behaviour="paragraph">
                <outputRendition xml:space="preserve">
                margin: 0 8%;
                </outputRendition>
            </model>
        </modelSequence><modelSequence output="print">
            <model predicate="ancestor::teiHeader" behaviour="inline"/>
            <model predicate="@rend=&#34;align(right)&#34;" behaviour="paragraph">
                <outputRendition xml:space="preserve">
                                                                                text-align: right;
margin: 0 8%;                                                                </outputRendition>
            </model>
            <model predicate="@rend=&#34;align(center)&#34;" behaviour="paragraph">
                <outputRendition xml:space="preserve">
                                                                                text-align: center;
margin: 0 8%;                                                                </outputRendition>
            </model>
            <model predicate="@rend=&#34;align(left)&#34;" behaviour="paragraph">
                <outputRendition xml:space="preserve">
                                                                                text-align: left;
margin: 0 8%;                                                                </outputRendition>
            </model>
            <model predicate="@rend=&#34;indent&#34;" behaviour="paragraph">
                <outputRendition xml:space="preserve">
                                                                                text-indent: 15%;
margin: 0 8%;                                                                </outputRendition>
            </model>
            <model predicate="not(@rend) and ancestor::text" behaviour="paragraph">
                <outputRendition xml:space="preserve">
                margin: 0 8%;
                </outputRendition>
            </model>
        </modelSequence><model predicate="parent::event" behaviour="inline"/><model predicate="$parameters?mode=&#34;index&#34; or $parameters?mode=&#34;facets&#34;" behaviour="block"/><model predicate="$parameters?mode='metadata-fr' or $parameters?mode='metadata-en' or parent::note or parent::abstract or parent::handNote or parent::postscript" behaviour="inline"/><model predicate="@hand and $parameters?mode=&#34;corrections&#34;" behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="id(substring-after(@hand, '#'), root($parameters?root))/p[@xml:lang=&#34;en&#34;]"/>
            <outputRendition xml:space="preserve">
            
            
            color: #9D9D9D;
font-family: cursive;
display: block;
            
            
            </outputRendition>
        </model><model behaviour="paragraph">
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if ((@rend=&#34;align(right)&#34;) or (@rend=&#34;margin(right)&#34;)) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
            <pb:template xmlns="" xml:space="preserve"><p style="[[rend]]">[[content]]</p></pb:template>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="dateline" mode="change"><modelSequence output="latex">
            <model predicate="@rend=&#34;align(right)&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\begin{flushright}
[[content]]
\end{flushright}</pb:template>
            </model>
            <model predicate="@rend=&#34;align(center)&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\begin{center}
[[content]]
\end{center}</pb:template>
            </model>
            <model predicate="@rend=&#34;align(left)&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\begin{flushleft}
[[content]]
\begin{flushleft}</pb:template>
            </model>
            <model predicate="@rend=&#34;indent&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\hspace*{10mm} [[content]]</pb:template>
            </model>
        </modelSequence><model predicate="@rend=&#34;align(right)&#34;" behaviour="block">
            <outputRendition xml:space="preserve">
            text-align: right;
            </outputRendition>
        </model><model predicate="@rend=&#34;align(center)&#34;" behaviour="block">
            <outputRendition xml:space="preserve">
            text-align: center;
            </outputRendition>
        </model><model predicate="@rend=&#34;align(left)&#34;" behaviour="block">
            <outputRendition xml:space="preserve">
            text-align: left;
            </outputRendition>
        </model><model predicate="@rend=&#34;indent&#34;" behaviour="block">
            <outputRendition xml:space="preserve">
            text-indent: 15%;
            </outputRendition>
        </model><model behaviour="inline"/></elementSpec>
                <elementSpec ident="text" mode="change"><model behaviour="body">
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="closer" mode="change"><model output="fo" behaviour="block">
            <desc>fo rendition</desc>
            <outputRendition xml:space="preserve">
            margin: 5%;
            </outputRendition>
        </model><model output="latex" behaviour="inline">
            <desc>latex rendition</desc>
            <pb:template xmlns="" xml:space="preserve">
[[content]]
</pb:template>
        </model><model behaviour="block">
            <desc>closer rendition</desc>
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if (@rend=&#34;align(right)&#34;) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         ''))"/>
            <pb:template xmlns="" xml:space="preserve"><div style="[[rend]]">[[content]]</div></pb:template>
            <outputRendition xml:space="preserve">
            margin-top: 1em; margin-left: 1em; margin-left: 1em;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="opener" mode="change"><model output="latex" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve">
[[content]]</pb:template>
        </model><model output="epub" behaviour="block">
            <outputRendition xml:space="preserve">
            margin: 5%;
            </outputRendition>
        </model><model output="fo" behaviour="block">
            <outputRendition xml:space="preserve">
            margin: 5%;
            </outputRendition>
        </model><model behaviour="block"/></elementSpec>
                <elementSpec ident="TEI" mode="change"><model output="latex" behaviour="inline">
            <param name="content" value="text"/>
            <param name="header" value="teiHeader"/>
            <param name="title" value=".//titleStmt/title[1]"/>
            <pb:template xmlns="" xml:space="preserve">\documentclass[12pt,a4paper,fromalign=right]{book}
\usepackage[french]{babel}
\usepackage[margin=2.5cm]{geometry}
\usepackage{setspace}
\onehalfspacing
\usepackage{parskip}
\usepackage{ulem}
\usepackage{fancyhdr}
\usepackage{xcolor, soul}
\definecolor{lightgray}{gray}{0.85}
\sethlcolor{lightgray}
\pagestyle{fancy}
\fancyhf{}
\renewcommand{\headrulewidth}{0pt}
\title{[[title]]}
\author{TEI Publisher}
\date{\today}
\begin{document}

[[header]]
\newpage


[[content]]

\end{document}</pb:template>
        </model><model behaviour="document"/></elementSpec>
                <elementSpec ident="teiHeader" mode="change"><modelSequence output="latex">
            <model behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\begin{footnotesize}</pb:template>
            </model>
            <model behaviour="inline">
                <param name="title" value=".//titleStmt/title[@xml:lang='en']"/>
                <pb:template xmlns="" xml:space="preserve">Title: [[title]]</pb:template>
            </model>
            <model predicate=".//correspDesc" behaviour="inline">
                <param name="author" value=".//correspAction[@type='sent']/persName"/>
                <param name="recipient" value=".//correspAction[@type='received']/persName"/>
                <pb:template xmlns="" xml:space="preserve">  \subsection*{\normalsize{Correspondents}}
  	\begin{itemize}
		\item Sender: [[author]]
  		\item Recipient: [[recipient]]
	\end{itemize}</pb:template>
            </model>
            <model predicate="not(.//correspDesc)" behaviour="inline">
                <param name="author" value=".//titleStmt/author/persName|.//creation/persName"/>
                <pb:template xmlns="" xml:space="preserve">Author: [[author]]</pb:template>
            </model>
            <model behaviour="inline">
                <param name="origin" value=".//history/origin/p[@xml:lang='en']"/>
                <pb:template xmlns="" xml:space="preserve">Time and place of writing: [[origin]]</pb:template>
            </model>
            <model behaviour="inline">
                <param name="pages" value=".//supportDesc/extent/measure[@xml:lang='en']"/>
                <param name="number" value="string-join(.//supportDesc/foliation/p[@xml:lang='en'], '. ')"/>
                <param name="conservation" value=".//supportDesc/condition/p[@xml:lang='en']"/>
                <param name="annex" value="if (@accMat) then concat(&#34;\item Appendix: &#34;, .//accMat/p[@xml:lang='en']) else ''"/>
                <pb:template xmlns="" xml:space="preserve">  \subsection*{\normalsize{Informations about the letter}}
    \begin{itemize}
		\item Number of pages: [[pages]]
    	\item Numbering: [[number]]
   		\item State of preservation: [[conservation]]
    	\item [[annex]]
	\end{itemize}</pb:template>
            </model>
            <model behaviour="inline">
                <param name="idno" value=".//msIdentifier/idno"/>
                <param name="collection" value=".//msIdentifier/collection"/>
                <param name="repository" value=".//msIdentifier/repository"/>
                <param name="institution" value=".//msIdentifier/institution"/>
                <param name="acquisition" value=".//acquisition/p[@xml:lang='en']"/>
                <param name="additions" value=".//additions/p[@xml:lang='en']"/>
                <pb:template xmlns="" xml:space="preserve">  \subsection*{\normalsize{Collection history}}
    \begin{itemize}
		\item Identifier: [[idno]]
     	\item Collection : [[collection]]
    	\item Institution: [[repository]], [[institution]]
    	\item Acquisition: [[acquisition]]
    	\item Additions: [[additions]]
  	\end{itemize}</pb:template>
            </model>
            <model behaviour="inline">
                <param name="projet" value=".//projectDesc/p[@xml:lang='en']"/>
                <param name="responsable" value=".//principal/persName"/>
                <param name="editor" value=".//respStmt[1]/persName"/>
                <param name="correction" value=".//correction/p[@xml:lang='en']"/>
                <param name="hyphenation" value=".//hyphenation/p[@xml:lang='en']"/>
                <param name="licence" value=".//publicationStmt/availability/licence"/>
                <pb:template xmlns="" xml:space="preserve">  \subsection*{\normalsize{Encoding}}
  \begin{itemize}
		\item Project: [[projet]]
    	\item Project manager: [[responsable]]
    	\item Project editor: [[editor]]
    	\item Correction: [[correction]]
  		\item Hyphénation: [[hyphenation]]
		\item Licence: [[licence]]
	\end{itemize}</pb:template>
            </model>
            <model behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\end{footnotesize}</pb:template>
                <outputRendition xml:space="preserve">
                </outputRendition>
            </model>
        </modelSequence><modelSequence output="epub">
            <model behaviour="heading">
                <param name="content" value=".//titleStmt/title[@xml:lang='en']"/>
                <param name="level" value="1"/>
                <outputRendition xml:space="preserve">
                font-size: 20px;
                </outputRendition>
            </model>
            <model behaviour="heading">
                <param name="content" value="'Metadata'"/>
                <param name="level" value="2"/>
            </model>
            <model predicate=".//correspDesc" behaviour="heading">
                <param name="content" value="'Correspondents'"/>
                <param name="level" value="3"/>
            </model>
            <model predicate=".//correspDesc" behaviour="block">
                <param name="content" value=".//correspAction[@type='sent']/persName"/>
                <outputRendition xml:space="preserve" scope="before">
                content:"Sender: "
                </outputRendition>
            </model>
            <model predicate=".//correspDesc" behaviour="block">
                <param name="content" value=".//correspAction[@type='received']/persName"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Recipient: '
                </outputRendition>
            </model>
            <model predicate="not(.//correspDesc)" behaviour="block">
                <param name="content" value=".//titleStmt/author/persName|.//creation/persName"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Author: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//history/origin/p[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Time and place of writing: '
                </outputRendition>
            </model>
            <model behaviour="heading">
                <param name="content" value="'Informations about the letter'"/>
                <param name="level" value="3"/>
            </model>
            <model behaviour="block">
                <param name="content" value=".//supportDesc/extent/measure[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Number of pages: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value="string-join(.//supportDesc/foliation/p[@xml:lang='en'], '. ')"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Numbering: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//supportDesc/condition/p[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'State of preservation: '
                </outputRendition>
            </model>
            <model predicate="not(.//accMat)" behaviour="block">
                <param name="content" value=".//accMat/p[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Appendix: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="page-break-before" value="always"/>
            </model>
            <model behaviour="heading">
                <param name="content" value="'Collection history'"/>
                <param name="level" value="3"/>
            </model>
            <model behaviour="block">
                <param name="content" value=".//msIdentifier/idno"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Identifier: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//msIdentifier/collection"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Collection: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//accMat/p[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Institution: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="repository" value=".//msIdentifier/repository"/>
                <param name="institution" value=".//msIdentifier/institution"/>
                <outputRendition xml:space="preserve">
                'Acquisition:' repository ', ' institution
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//additions/p[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Additions: '
                </outputRendition>
            </model>
            <model behaviour="heading">
                <param name="content" value="'Encoding'"/>
                <param name="level" value="3"/>
            </model>
            <model behaviour="block">
                <param name="content" value=".//projectDesc/p[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Project: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//principal/persName"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Project manager: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//respStmt[1]/persName"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Project editor: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//correction/p[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Correction: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//hyphenation/p[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Hyphénation: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//publicationStmt/availability/licence"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Licence: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content"/>
                <outputRendition xml:space="preserve">
                </outputRendition>
            </model>
        </modelSequence><modelSequence output="print">
            <model behaviour="heading">
                <param name="content" value=".//titleStmt/title[@xml:lang='en']"/>
                <param name="level" value="1"/>
                <outputRendition xml:space="preserve">
                font-size: 20px;
                </outputRendition>
            </model>
            <model behaviour="heading">
                <param name="content" value="'Metadata'"/>
                <param name="level" value="2"/>
            </model>
            <model predicate=".//correspDesc" behaviour="heading">
                <param name="content" value="'Correspondents'"/>
                <param name="level" value="3"/>
            </model>
            <model predicate=".//correspDesc" behaviour="block">
                <param name="content" value=".//correspAction[@type='sent']/persName"/>
                <outputRendition xml:space="preserve" scope="before">
                content:"Sender: "
                </outputRendition>
            </model>
            <model predicate=".//correspDesc" behaviour="block">
                <param name="content" value=".//correspAction[@type='received']/persName"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Recipient: '
                </outputRendition>
            </model>
            <model predicate="not(.//correspDesc)" behaviour="block">
                <param name="content" value=".//titleStmt/author/persName|.//creation/persName"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Author: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//history/origin/p[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Time and place of writing: '
                </outputRendition>
            </model>
            <model behaviour="heading">
                <param name="content" value="'Informations about the letter'"/>
                <param name="level" value="3"/>
            </model>
            <model behaviour="block">
                <param name="content" value=".//supportDesc/extent/measure[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Number of pages: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value="string-join(.//supportDesc/foliation/p[@xml:lang='en'], '. ')"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Numbering: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//supportDesc/condition/p[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'State of preservation: '
                </outputRendition>
            </model>
            <model predicate="not(.//accMat)" behaviour="block">
                <param name="content" value=".//accMat/p[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Appendix: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="page-break-before" value="always"/>
            </model>
            <model behaviour="heading">
                <param name="content" value="'Collection history'"/>
                <param name="level" value="3"/>
            </model>
            <model behaviour="block">
                <param name="content" value=".//msIdentifier/idno"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Identifier: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//msIdentifier/collection"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Collection: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//accMat/p[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Institution: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="repository" value=".//msIdentifier/repository"/>
                <param name="institution" value=".//msIdentifier/institution"/>
                <outputRendition xml:space="preserve">
                'Acquisition:' repository ', ' institution
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//additions/p[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Additions: '
                </outputRendition>
            </model>
            <model behaviour="heading">
                <param name="content" value="'Encoding'"/>
                <param name="level" value="3"/>
            </model>
            <model behaviour="block">
                <param name="content" value=".//projectDesc/p[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Project: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//principal/persName"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Project manager: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//respStmt[1]/persName"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Project editor: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//correction/p[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Correction: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//hyphenation/p[@xml:lang='en']"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Hyphénation: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value=".//publicationStmt/availability/licence/@target"/>
                <outputRendition xml:space="preserve" scope="before">
                content:'Licence: '
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content"/>
                <outputRendition xml:space="preserve">
                </outputRendition>
            </model>
        </modelSequence><model predicate="$parameters?mode='licence'" behaviour="inline">
            <param name="content" value=".//publicationStmt/availability/licence"/>
            <outputRendition xml:space="preserve">
            font-size: smaller;
            </outputRendition>
        </model><model predicate="$parameters?mode='citation'" behaviour="inline">
            <param name="title" value=".//titleStmt/title[1]"/>
            <param name="resp" value="string-join(.//respStmt, '. ')"/>
            <param name="series" value=".//seriesStmt/title[@type='main']"/>
            <param name="date" value="revisionDesc/change[1]"/>
            <param name="manager" value=".//principal/persName"/>
            <param name="affiliation" value=".//principal/affiliation/orgName"/>
            <param name="url" value="base-uri()"/>
            <param name="editor" value="string-join(.//editionStmt, '. ')"/>
            <pb:template xmlns="" xml:space="preserve"><p>"[[title]]". [[editor]] [[resp]]. In: [[series]]. Project managed by [[manager]], [[affiliation]]. [[lien]] Version: [[date]]. URL: [[url]]</p></pb:template>
            <outputRendition xml:space="preserve">
            font-size: smaller;
            </outputRendition>
        </model><modelSequence predicate="$parameters?mode='metadata-fr'">
            <model predicate=".//accMat and .//correspDesc" behaviour="inline">
                <param name="title" value=".//titleStmt/title[@xml:lang='fr']"/>
                <param name="author" value="if (.//correspAction[@type='sent']/persName) then (.//correspAction[@type='sent']/persName) else (if (.//correspAction[@type='sent']/orgName) then (.//correspAction[@type='sent']/orgName) else &#34;...&#34;)"/>
                <param name="recipient" value="if (.//correspAction[@type='received']/persName) then (.//correspAction[@type='received']/persName) else (if (.//correspAction[@type='received']/orgName) then (.//correspAction[@type='received']/orgName) else &#34;...&#34;)"/>
                <param name="origin" value="if (.//history) then (.//history/origin/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="idno" value="if (.//msIdentifier/idno) then (.//msIdentifier/idno) else &#34;...&#34;"/>
                <param name="collection" value="if (.//msIdentifier/collection) then (.//msIdentifier/collection) else &#34;...&#34;"/>
                <param name="repository" value="if (.//msIdentifier/repository) then (.//msIdentifier/repository) else &#34;...&#34;"/>
                <param name="institution" value="if (.//msIdentifier/institution) then (.//msIdentifier/institution) else &#34;...&#34;"/>
                <param name="pages" value="if (.//supportDesc/extent) then (.//supportDesc/extent/measure[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="number" value="if (.//supportDesc/foliation) then (string-join(.//supportDesc/foliation/p[@xml:lang='fr'], '. ')) else &#34;...&#34;"/>
                <param name="conservation" value="if (.//supportDesc/condition) then (.//supportDesc/condition/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="annex" value="if (.//accMat) then (.//accMat/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="projet" value="if (.//projectDesc) then (.//projectDesc/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="responsable" value="if (.//principal) then (.//principal/persName) else &#34;...&#34;"/>
                <param name="editor" value="if (.//respStmt) then (.//respStmt[1]/persName) else &#34;...&#34;"/>
                <param name="correction" value="if (.//correction) then (.//correction/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="hyphenation" value="if (.//hyphenation) then (.//hyphenation/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="acquisition" value="if (.//acquisition) then (.//acquisition/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="additions" value="if (.//additions) then (.//additions/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="sent" value="if (.//correspAction[@type='sent']/persName/@ref) then (.//correspAction[@type='sent']/persName/@ref) else (if (.//correspAction[@type='sent']/orgName/@ref) then (.//correspAction[@type='sent']/orgName/@ref) else &#34;&#34;)"/>
                <param name="received" value="if (.//correspAction[@type='received']/persName/@ref) then (.//correspAction[@type='received']/persName/@ref) else (if (.//correspAction[@type='received']/orgName/@ref) then (.//correspAction[@type='received']/orgName/@ref) else &#34;&#34;)"/>
                <pb:template xmlns="" xml:space="preserve"><div>
  <h4>Titre</h4> <p>[[title]]</p>
  <h4>Correspondants</h4> 
  <ul><li>Expéditeur: <a href="[[sent]]" target="_blank">[[author]]</a></li>
  <li>Destinataire: <a href="[[received]]" target="_blank">[[recipient]]</a></li></ul>
  <h4>Lieu et date d'écriture</h4> <p>[[origin]]</p>
  <h4>Informations sur la lettre</h4>
    <ul><li>Nombre de pages: [[pages]]</li>
    <li>Numérotation: [[number]]</li>
    <li>État de conservation: [[conservation]]</li>
    <li>Annexe: [[annex]]</li></ul>
  <h4>Histoire du fonds</h4>
  <ul><li>Cote : [[idno]]</li>
    <li>Fonds : [[collection]]</li>
    <li>Lieu de conservation: [[repository]], [[institution]]</li>
    <li>Acquisition: [[acquisition]]</li>
    <li>Additions: [[additions]]</li>
  </ul>
  <h4>Encodage</h4>
  <ul><li>Projet: [[projet]]</li>
    <li>Responsable de projet: [[responsable]]</li>
    <li>Éditeur de projet: [[editor]]</li>
    <li>Correction: [[correction]]</li>
  <li>Hyphénation: [[hyphenation]]</li>
  </ul>
</div></pb:template>
            </model>
            <model predicate="not(.//accMat) and .//correspDesc" behaviour="inline">
                <param name="title" value=".//titleStmt/title[@xml:lang='fr']"/>
                <param name="author" value="if (.//correspAction[@type='sent']/persName) then (.//correspAction[@type='sent']/persName) else (if (.//correspAction[@type='sent']/orgName) then (.//correspAction[@type='sent']/orgName) else &#34;...&#34;)"/>
                <param name="recipient" value="if (.//correspAction[@type='received']/persName) then (.//correspAction[@type='received']/persName) else (if (.//correspAction[@type='received']/orgName) then (.//correspAction[@type='received']/orgName) else &#34;...&#34;)"/>
                <param name="origin" value="if (.//history) then (.//history/origin/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="idno" value="if (.//msIdentifier/idno) then (.//msIdentifier/idno) else &#34;...&#34;"/>
                <param name="collection" value="if (.//msIdentifier/collection) then (.//msIdentifier/collection) else &#34;...&#34;"/>
                <param name="repository" value="if (.//msIdentifier/repository) then (.//msIdentifier/repository) else &#34;...&#34;"/>
                <param name="institution" value="if (.//msIdentifier/institution) then (.//msIdentifier/institution) else &#34;...&#34;"/>
                <param name="pages" value="if (.//supportDesc/extent) then (.//supportDesc/extent/measure[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="number" value="if (.//supportDesc/foliation) then (string-join(.//supportDesc/foliation/p[@xml:lang='fr'], '. ')) else &#34;...&#34;"/>
                <param name="conservation" value="if (.//supportDesc/condition) then (.//supportDesc/condition/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="projet" value="if (.//projectDesc) then (.//projectDesc/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="responsable" value="if (.//principal) then (.//principal/persName) else &#34;...&#34;"/>
                <param name="editor" value="if (.//respStmt) then (.//respStmt[1]/persName) else &#34;...&#34;"/>
                <param name="correction" value="if (.//correction) then (.//correction/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="hyphenation" value="if (.//hyphenation) then (.//hyphenation/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="acquisition" value="if (.//acquisition) then (.//acquisition/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="additions" value="if (.//additions) then (.//additions/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="sent" value="if (.//correspAction[@type='sent']/persName/@ref) then (.//correspAction[@type='sent']/persName/@ref) else (if (.//correspAction[@type='sent']/orgName/@ref) then (.//correspAction[@type='sent']/orgName/@ref) else &#34;&#34;)"/>
                <param name="received" value="if (.//correspAction[@type='received']/persName/@ref) then (.//correspAction[@type='received']/persName/@ref) else (if (.//correspAction[@type='received']/orgName/@ref) then (.//correspAction[@type='received']/orgName/@ref) else &#34;&#34;)"/>
                <pb:template xmlns="" xml:space="preserve"><div>
  <h4>Titre</h4> <p>[[title]]</p>
  <h4>Correspondants</h4> 
  <ul><li>Expéditeur: <a href="[[sent]]" target="_blank">[[author]]</a></li>
  <li>Destinataire: <a href="[[received]]" target="_blank">[[recipient]]</a></li></ul>
  <h4>Lieu et date d'écriture</h4> <p>[[origin]]</p>
  <h4>Informations sur la lettre</h4>
    <ul><li>Nombre de pages: [[pages]]</li>
    <li>Numérotation: [[number]]</li>
    <li>État de conservation: [[conservation]]</li></ul>
  <h4>Histoire du fonds</h4>
  <ul><li>Cote : [[idno]]</li>
    <li>Fonds : [[collection]]</li>
    <li>Lieu de conservation: [[repository]], [[institution]]</li>
    <li>Acquisition: [[acquisition]]</li>
    <li>Additions: [[additions]]</li>
  </ul>
  <h4>Encodage</h4>
  <ul><li>Projet: [[projet]]</li>
    <li>Responsable de projet: [[responsable]]</li>
    <li>Éditeur de projet: [[editor]]</li>
    <li>Correction: [[correction]]</li>
  <li>Hyphénation: [[hyphenation]]</li>
  </ul>
</div></pb:template>
            </model>
            <model predicate=".//accMat and not(.//correspDesc)" behaviour="inline">
                <param name="title" value=".//titleStmt/title[@xml:lang='fr']"/>
                <param name="author" value=".//titleStmt/author/persName|.//creation/persName"/>
                <param name="origin" value="if (.//history) then (.//history/origin/p[@xml:lang='fr']) else (if (.//creation) then (.//creation/date) else &#34;...&#34;)"/>
                <param name="idno" value="if (.//msIdentifier/idno) then (.//msIdentifier/idno) else &#34;...&#34;"/>
                <param name="collection" value="if (.//msIdentifier/collection) then (.//msIdentifier/collection) else &#34;...&#34;"/>
                <param name="repository" value="if (.//msIdentifier/repository) then (.//msIdentifier/repository) else &#34;...&#34;"/>
                <param name="institution" value="if (.//msIdentifier/institution) then (.//msIdentifier/institution) else &#34;...&#34;"/>
                <param name="pages" value="if (.//supportDesc/extent) then (.//supportDesc/extent/measure[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="number" value="if (.//supportDesc/foliation) then (string-join(.//supportDesc/foliation/p[@xml:lang='fr'], '. ')) else &#34;...&#34;"/>
                <param name="conservation" value="if (.//supportDesc/condition) then (.//supportDesc/condition/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="annex" value="if (.//accMat) then (.//accMat/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="projet" value="if (.//projectDesc) then (.//projectDesc/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="responsable" value="if (.//principal) then (.//principal/persName) else &#34;...&#34;"/>
                <param name="editor" value="if (.//respStmt) then (.//respStmt[1]/persName) else &#34;...&#34;"/>
                <param name="correction" value="if (.//correction) then (.//correction/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="hyphenation" value="if (.//hyphenation) then (.//hyphenation/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="acquisition" value="if (.//acquisition) then (.//acquisition/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="additions" value="if (.//additions) then (.//additions/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <pb:template xmlns="" xml:space="preserve"><div>
  <h4>Titre</h4> <p>[[title]]</p>
  <h4>Auteur</h4> <p>[[author]]</p>
  <h4>Lieu et date d'écriture</h4> <p>[[origin]]</p>
  <h4>Informations sur la lettre</h4>
    <ul><li>Nombre de pages: [[pages]]</li>
    <li>Numérotation: [[number]]</li>
    <li>État de conservation: [[conservation]]</li>
    <li>Annexe: [[annex]]</li></ul>
  <h4>Histoire du fonds</h4>
  <ul><li>Cote : [[idno]]</li>
    <li>Fonds : [[collection]]</li>
    <li>Lieu de conservation: [[repository]], [[institution]]</li>
    <li>Acquisition: [[acquisition]]</li>
    <li>Additions: [[additions]]</li>
  </ul>
  <h4>Encodage</h4>
  <ul><li>Projet: [[projet]]</li>
    <li>Responsable de projet: [[responsable]]</li>
    <li>Éditeur de projet: [[editor]]</li>
    <li>Correction: [[correction]]</li>
  <li>Hyphénation: [[hyphenation]]</li>
  </ul>
</div></pb:template>
            </model>
            <model predicate="not(.//accMat) and not(.//correspDesc)" behaviour="inline">
                <param name="title" value=".//titleStmt/title[@xml:lang='fr']"/>
                <param name="author" value=".//titleStmt/author/persName|.//creation/persName"/>
                <param name="origin" value="if (.//history) then (.//history/origin/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="idno" value="if (.//msIdentifier/idno) then (.//msIdentifier/idno) else &#34;...&#34;"/>
                <param name="collection" value="if (.//msIdentifier/collection) then (.//msIdentifier/collection) else &#34;...&#34;"/>
                <param name="repository" value="if (.//msIdentifier/repository) then (.//msIdentifier/repository) else &#34;...&#34;"/>
                <param name="institution" value="if (.//msIdentifier/institution) then (.//msIdentifier/institution) else &#34;...&#34;"/>
                <param name="pages" value="if (.//supportDesc/extent) then (.//supportDesc/extent/measure[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="number" value="if (.//supportDesc/foliation) then (string-join(.//supportDesc/foliation/p[@xml:lang='fr'], '. ')) else &#34;...&#34;"/>
                <param name="conservation" value="if (.//supportDesc/condition) then (.//supportDesc/condition/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="projet" value="if (.//projectDesc) then (.//projectDesc/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="responsable" value="if (.//principal) then (.//principal/persName) else &#34;...&#34;"/>
                <param name="editor" value="if (.//respStmt) then (.//respStmt[1]/persName) else &#34;...&#34;"/>
                <param name="correction" value="if (.//correction) then (.//correction/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="hyphenation" value="if (.//hyphenation) then (.//hyphenation/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="acquisition" value="if (.//acquisition) then (.//acquisition/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <param name="additions" value="if (.//additions) then (.//additions/p[@xml:lang='fr']) else &#34;...&#34;"/>
                <pb:template xmlns="" xml:space="preserve"><div>
  <h4>Titre</h4> <p>[[title]]</p>
  <h4>Auteur</h4> <p>[[author]]</p>
  <h4>Lieu et date d'écriture</h4> <p>[[origin]]</p>
  <h4>Informations sur la lettre</h4>
    <ul><li>Nombre de pages: [[pages]]</li>
    <li>Numérotation: [[number]]</li>
    <li>État de conservation: [[conservation]]</li></ul>
  <h4>Histoire du fonds</h4>
  <ul><li>Cote : [[idno]]</li>
    <li>Fonds : [[collection]]</li>
    <li>Lieu de conservation: [[repository]], [[institution]]</li>
    <li>Acquisition: [[acquisition]]</li>
    <li>Additions: [[additions]]</li>
  </ul>
  <h4>Encodage</h4>
  <ul><li>Projet: [[projet]]</li>
    <li>Responsable de projet: [[responsable]]</li>
    <li>Éditeur de projet: [[editor]]</li>
    <li>Correction: [[correction]]</li>
  <li>Hyphénation: [[hyphenation]]</li>
  </ul>
</div></pb:template>
            </model>
        </modelSequence><modelSequence predicate="$parameters?mode='metadata-en'">
            <model predicate=".//accMat and .//correspDesc" behaviour="inline">
                <param name="title" value=".//titleStmt/title[@xml:lang='en']"/>
                <param name="author" value="if (.//correspAction[@type='sent']/persName) then (.//correspAction[@type='sent']/persName) else (if (.//correspAction[@type='sent']/orgName) then (.//correspAction[@type='sent']/orgName) else &#34;...&#34;)"/>
                <param name="recipient" value="if (.//correspAction[@type='received']/persName) then (.//correspAction[@type='received']/persName) else (if (.//correspAction[@type='received']/orgName) then (.//correspAction[@type='received']/orgName) else &#34;...&#34;)"/>
                <param name="origin" value="if (.//history) then (.//history/origin/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="idno" value="if (.//msIdentifier/idno) then (.//msIdentifier/idno) else &#34;...&#34;"/>
                <param name="collection" value="if (.//msIdentifier/collection) then (.//msIdentifier/collection) else &#34;...&#34;"/>
                <param name="repository" value="if (.//msIdentifier/repository) then (.//msIdentifier/repository) else &#34;...&#34;"/>
                <param name="institution" value="if (.//msIdentifier/institution) then (.//msIdentifier/institution) else &#34;...&#34;"/>
                <param name="pages" value="if (.//supportDesc/extent) then (.//supportDesc/extent/measure[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="number" value="if (.//supportDesc/foliation) then (string-join(.//supportDesc/foliation/p[@xml:lang='en'], '. ')) else &#34;...&#34;"/>
                <param name="conservation" value="if (.//supportDesc/condition) then (.//supportDesc/condition/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="annex" value="if (.//accMat) then (.//accMat/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="projet" value="if (.//projectDesc) then (.//projectDesc/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="responsable" value="if (.//principal) then (.//principal/persName) else &#34;...&#34;"/>
                <param name="editor" value="if (.//respStmt) then (.//respStmt[1]/persName) else &#34;...&#34;"/>
                <param name="correction" value="if (.//correction) then (.//correction/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="hyphenation" value="if (.//hyphenation) then (.//hyphenation/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="acquisition" value="if (.//acquisition) then (.//acquisition/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="additions" value="if (.//additions) then (.//additions/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="sent" value="if (.//correspAction[@type='sent']/persName/@ref) then (.//correspAction[@type='sent']/persName/@ref) else (if (.//correspAction[@type='sent']/orgName/@ref) then (.//correspAction[@type='sent']/orgName/@ref) else &#34;&#34;)"/>
                <param name="received" value="if (.//correspAction[@type='received']/persName/@ref) then (.//correspAction[@type='received']/persName/@ref) else (if (.//correspAction[@type='received']/orgName/@ref) then (.//correspAction[@type='received']/orgName/@ref) else &#34;&#34;)"/>
                <pb:template xmlns="" xml:space="preserve"><div>
  <h4>Title</h4> <p>[[title]]</p>
  <h4>Correspondents</h4> 
  <ul><li>Sender: <a href="[[sent]]" target="_blank">[[author]]</a></li>
  <li>Recipient: <a href="[[received]]" target="_blank">[[recipient]]</a></li></ul>
  <h4>Time and place of writing</h4> <p>[[origin]]</p>
  <h4>Informations about the letter</h4>
    <ul><li>Number of pages: [[pages]]</li>
    <li>Numbering: [[number]]</li>
    <li>State of preservation: [[conservation]]</li>
    <li>Annex: [[annex]]</li></ul>
  <h4>Collection history</h4>
  <ul><li>Identifier : [[idno]]</li>
    <li>Collection : [[collection]]</li>
    <li>Institution: [[repository]], [[institution]]</li>
    <li>Acquisition: [[acquisition]]</li>
    <li>Additions: [[additions]]</li>
  </ul>
  <h4>Encoding</h4>
  <ul><li>Project: [[projet]]</li>
    <li>Project manager: [[responsable]]</li>
    <li>Project editor: [[editor]]</li>
    <li>Correction: [[correction]]</li>
  <li>Hyphenation: [[hyphenation]]</li>
  </ul>
</div></pb:template>
            </model>
            <model predicate="not(.//accMat) and .//correspDesc" behaviour="inline">
                <param name="title" value=".//titleStmt/title[@xml:lang='en']"/>
                <param name="author" value="if (.//correspAction[@type='sent']/persName) then (.//correspAction[@type='sent']/persName) else (if (.//correspAction[@type='sent']/orgName) then (.//correspAction[@type='sent']/orgName) else &#34;...&#34;)"/>
                <param name="recipient" value="if (.//correspAction[@type='received']/persName) then (.//correspAction[@type='received']/persName) else (if (.//correspAction[@type='received']/orgName) then (.//correspAction[@type='received']/orgName) else &#34;...&#34;)"/>
                <param name="origin" value="if (.//history) then (.//history/origin/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="idno" value="if (.//msIdentifier/idno) then (.//msIdentifier/idno) else &#34;...&#34;"/>
                <param name="collection" value="if (.//msIdentifier/collection) then (.//msIdentifier/collection) else &#34;...&#34;"/>
                <param name="repository" value="if (.//msIdentifier/repository) then (.//msIdentifier/repository) else &#34;...&#34;"/>
                <param name="institution" value="if (.//msIdentifier/institution) then (.//msIdentifier/institution) else &#34;...&#34;"/>
                <param name="pages" value="if (.//supportDesc/extent) then (.//supportDesc/extent/measure[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="number" value="if (.//supportDesc/foliation) then (string-join(.//supportDesc/foliation/p[@xml:lang='en'], '. ')) else &#34;...&#34;"/>
                <param name="conservation" value="if (.//supportDesc/condition) then (.//supportDesc/condition/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="projet" value="if (.//projectDesc) then (.//projectDesc/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="responsable" value="if (.//principal) then (.//principal/persName) else &#34;...&#34;"/>
                <param name="editor" value="if (.//respStmt) then (.//respStmt[1]/persName) else &#34;...&#34;"/>
                <param name="correction" value="if (.//correction) then (.//correction/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="hyphenation" value="if (.//hyphenation) then (.//hyphenation/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="acquisition" value="if (.//acquisition) then (.//acquisition/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="additions" value="if (.//additions) then (.//additions/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="sent" value="if (.//correspAction[@type='sent']/persName/@ref) then (.//correspAction[@type='sent']/persName/@ref) else (if (.//correspAction[@type='sent']/orgName/@ref) then (.//correspAction[@type='sent']/orgName/@ref) else &#34;&#34;)"/>
                <param name="received" value="if (.//correspAction[@type='received']/persName/@ref) then (.//correspAction[@type='received']/persName/@ref) else (if (.//correspAction[@type='received']/orgName/@ref) then (.//correspAction[@type='received']/orgName/@ref) else &#34;&#34;)"/>
                <pb:template xmlns="" xml:space="preserve"><div>
  <h4>Title</h4> <p>[[title]]</p>
  <h4>Correspondents</h4> 
  <ul><li>Sender: <a href="[[sent]]" target="_blank">[[author]]</a></li>
  <li>Recipient: <a href="[[received]]" target="_blank">[[recipient]]</a></li></ul>
  <h4>Time and place of writing</h4> <p>[[origin]]</p>
  <h4>Informations about the letter</h4>
    <ul><li>Number of pages: [[pages]]</li>
    <li>Numbering: [[number]]</li>
    <li>State of preservation: [[conservation]]</li></ul>
  <h4>Collection history</h4>
  <ul><li>Identifier : [[idno]]</li>
    <li>Collection : [[collection]]</li>
    <li>Institution: [[repository]], [[institution]]</li>
    <li>Acquisition: [[acquisition]]</li>
    <li>Additions: [[additions]]</li>
  </ul>
  <h4>Encoding</h4>
  <ul><li>Project: [[projet]]</li>
    <li>Project manager: [[responsable]]</li>
    <li>Project editor: [[editor]]</li>
    <li>Correction: [[correction]]</li>
  <li>Hyphenation: [[hyphenation]]</li>
  </ul>
</div></pb:template>
            </model>
            <model predicate=".//accMat and not(.//correspDesc)" behaviour="inline">
                <param name="title" value=".//titleStmt/title[@xml:lang='en']"/>
                <param name="author" value=".//titleStmt/author/persName|.//creation/persName"/>
                <param name="origin" value="if (.//history) then (.//history/origin/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="idno" value="if (.//msIdentifier/idno) then (.//msIdentifier/idno) else &#34;...&#34;"/>
                <param name="collection" value="if (.//msIdentifier/collection) then (.//msIdentifier/collection) else &#34;...&#34;"/>
                <param name="repository" value="if (.//msIdentifier/repository) then (.//msIdentifier/repository) else &#34;...&#34;"/>
                <param name="institution" value="if (.//msIdentifier/institution) then (.//msIdentifier/institution) else &#34;...&#34;"/>
                <param name="pages" value="if (.//supportDesc/extent) then (.//supportDesc/extent/measure[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="number" value="if (.//supportDesc/foliation) then (string-join(.//supportDesc/foliation/p[@xml:lang='en'], '. ')) else &#34;...&#34;"/>
                <param name="conservation" value="if (.//supportDesc/condition) then (.//supportDesc/condition/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="annex" value="if (.//accMat) then (.//accMat/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="projet" value="if (.//projectDesc) then (.//projectDesc/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="responsable" value="if (.//principal) then (.//principal/persName) else &#34;...&#34;"/>
                <param name="editor" value="if (.//respStmt) then (.//respStmt[1]/persName) else &#34;...&#34;"/>
                <param name="correction" value="if (.//correction) then (.//correction/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="hyphenation" value="if (.//hyphenation) then (.//hyphenation/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="acquisition" value="if (.//acquisition) then (.//acquisition/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="additions" value="if (.//additions) then (.//additions/p[@xml:lang='en']) else &#34;...&#34;"/>
                <pb:template xmlns="" xml:space="preserve"><div>
  <h4>Title</h4> <p>[[title]]</p>
  <h4>Author</h4> <p>[[author]]</p>
  <h4>Time and place of writing</h4> <p>[[origin]]</p>
  <h4>Informations about the letter</h4>
    <ul><li>Number of pages: [[pages]]</li>
    <li>Numbering: [[number]]</li>
    <li>State of preservation: [[conservation]]</li>
    <li>Annex: [[annex]]</li></ul>
  <h4>Collection history</h4>
  <ul><li>Identifier : [[idno]]</li>
    <li>Collection : [[collection]]</li>
    <li>Institution: [[repository]], [[institution]]</li>
    <li>Acquisition: [[acquisition]]</li>
    <li>Additions: [[additions]]</li>
  </ul>
  <h4>Encoding</h4>
  <ul><li>Project: [[projet]]</li>
    <li>Project manager: [[responsable]]</li>
    <li>Project editor: [[editor]]</li>
    <li>Correction: [[correction]]</li>
  <li>Hyphenation: [[hyphenation]]</li>
  </ul>
</div></pb:template>
            </model>
            <model predicate="not(.//accMat) and not(.//correspDesc)" behaviour="inline">
                <param name="title" value=".//titleStmt/title[@xml:lang='en']"/>
                <param name="author" value=".//titleStmt/author/persName|.//creation/persName"/>
                <param name="origin" value="if (.//history) then (.//history/origin/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="idno" value="if (.//msIdentifier/idno) then (.//msIdentifier/idno) else &#34;...&#34;"/>
                <param name="collection" value="if (.//msIdentifier/collection) then (.//msIdentifier/collection) else &#34;...&#34;"/>
                <param name="repository" value="if (.//msIdentifier/repository) then (.//msIdentifier/repository) else &#34;...&#34;"/>
                <param name="institution" value="if (.//msIdentifier/institution) then (.//msIdentifier/institution) else &#34;...&#34;"/>
                <param name="pages" value="if (.//supportDesc/extent) then (.//supportDesc/extent/measure[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="number" value="if (.//supportDesc/foliation) then (string-join(.//supportDesc/foliation/p[@xml:lang='en'], '. ')) else &#34;...&#34;"/>
                <param name="conservation" value="if (.//supportDesc/condition) then (.//supportDesc/condition/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="projet" value="if (.//projectDesc) then (.//projectDesc/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="responsable" value="if (.//principal) then (.//principal/persName) else &#34;...&#34;"/>
                <param name="editor" value="if (.//respStmt) then (.//respStmt[1]/persName) else &#34;...&#34;"/>
                <param name="correction" value="if (.//correction) then (.//correction/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="hyphenation" value="if (.//hyphenation) then (.//hyphenation/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="acquisition" value="if (.//acquisition) then (.//acquisition/p[@xml:lang='en']) else &#34;...&#34;"/>
                <param name="additions" value="if (.//additions) then (.//additions/p[@xml:lang='en']) else &#34;...&#34;"/>
                <pb:template xmlns="" xml:space="preserve"><div>
  <h4>Title</h4> <p>[[title]]</p>
  <h4>Author</h4> <p>[[author]]</p>
  <h4>Time and place of writing</h4> <p>[[origin]]</p>
  <h4>Informations about the letter</h4>
    <ul><li>Number of pages: [[pages]]</li>
    <li>Numbering: [[number]]</li>
    <li>State of preservation: [[conservation]]</li></ul>
  <h4>Collection history</h4>
  <ul><li>Identifier : [[idno]]</li>
    <li>Collection : [[collection]]</li>
    <li>Institution: [[repository]], [[institution]]</li>
    <li>Acquisition: [[acquisition]]</li>
    <li>Additions: [[additions]]</li>
  </ul>
  <h4>Encoding</h4>
  <ul><li>Project: [[projet]]</li>
    <li>Project manager: [[responsable]]</li>
    <li>Project editor: [[editor]]</li>
    <li>Correction: [[correction]]</li>
  <li>Hyphenation: [[hyphenation]]</li>
  </ul>
</div></pb:template>
            </model>
        </modelSequence><model predicate="$parameters?mode='title'" behaviour="inline">
            <param name="content" value="(fileDesc/titleStmt/title[1])"/>
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model><model output="web" predicate="$parameters?header='short'" behaviour="block"/><model output="web" behaviour="metadata"/></elementSpec>
                <elementSpec ident="lb" mode="change"><model predicate="not(@break=&#34;no&#34;) and ($parameters?mode=&#34;original&#34; or $parameters?mode=&#34;entities&#34;)" behaviour="inline">
            <param name="content" value="&#34; &#34;"/>
        </model><model output="latex" behaviour="inline">
            <desc>latex rendition</desc>
            <pb:template xmlns="" xml:space="preserve">\\</pb:template>
        </model><model predicate="$parameters?mode='corrections'" behaviour="break" useSourceRendition="true">
            <param name="type" value="'line'"/>
            <param name="label" value="@n"/>
        </model></elementSpec>
                <elementSpec ident="div" mode="change"><modelSequence predicate="$parameters?mode='facets'">
            <desc>facets model</desc>
            <model predicate="descendant::persName" behaviour="heading">
                <param name="content" value="'Persons'"/>
                <param name="level" value="2"/>
                <outputRendition xml:space="preserve">
                                font-weight: 200;
border-bottom: 1px solid #A0A0A0;                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value="for $n in .//persName group by $ref := $n/@ref order by $ref return $n[1]"/>
            </model>
            <model predicate="descendant::orgName" behaviour="heading">
                <param name="content" value="'Organisations/Groups'"/>
                <param name="level" value="2"/>
                <outputRendition xml:space="preserve">
                                font-weight: 200;
border-bottom: 1px solid #A0A0A0;                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value="for $n in .//orgName group by $ref := $n/@ref order by $ref return $n[1]"/>
            </model>
            <model predicate="descendant::title[@ref]" behaviour="heading">
                <param name="content" value="&#34;Bibliography&#34;"/>
                <param name="level" value="2"/>
                <outputRendition xml:space="preserve">
                                font-weight: 200;
border-bottom: 1px solid #A0A0A0;                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value="for $n in .//title[@ref] group by $ref := $n/@ref order by $ref return $n[1]"/>
            </model>
            <model predicate="descendant::rs" behaviour="heading">
                <param name="content" value="&#34;Undefined references&#34;"/>
                <param name="level" value="2"/>
                <outputRendition xml:space="preserve">
                                font-weight: 200;
border-bottom: 1px solid #A0A0A0;                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value="for $n in .//rs group by $ref := $n/@ref order by $ref return $n[1]"/>
            </model>
            <model predicate="descendant::term" behaviour="heading">
                <param name="content" value="&#34;Terms&#34;"/>
                <param name="level" value="2"/>
                <outputRendition xml:space="preserve">
                font-weight: 200;
border-bottom: 1px solid #A0A0A0;
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value="for $n in .//term group by $ref := $n/@ref order by $ref return $n[1]"/>
            </model>
        </modelSequence><modelSequence output="epub">
            <desc>epub rendition</desc>
            <model behaviour="heading">
                <param name="content" value="if (@type=&#34;transcription&#34;) then 'Transcription' else (if (@type=&#34;annex&#34;) then 'Annexe' else (if (@type=&#34;letter&#34;) then 'Letter' else 'Else'))"/>
                <param name="level" value="2"/>
            </model>
            <model behaviour="block"/>
        </modelSequence><modelSequence output="fo">
            <desc>fo rendition</desc>
            <model behaviour="heading">
                <param name="content" value="if (@type=&#34;transcription&#34;) then 'Transcription' else (if (@type=&#34;annex&#34;) then 'Annexe' else (if (@type=&#34;letter&#34;) then 'Letter' else 'Else'))"/>
                <param name="level" value="2"/>
                <outputRendition xml:space="preserve">
                font-size: 16px;
                </outputRendition>
            </model>
            <model behaviour="block"/>
        </modelSequence><model predicate="$parameters?mode='facets' and parent::body" behaviour="block">
            <desc>facets rendition</desc>
        </model><model predicate="@type='title_page'" behaviour="block">
            <outputRendition xml:space="preserve">
            border: 1px solid black; padding: 5px;
            </outputRendition>
        </model><model predicate="parent::body" behaviour="section"/><model behaviour="block"/></elementSpec>
                <elementSpec ident="addrLine" mode="change"><modelSequence output="latex">
            <model predicate="@rend=&#34;align(right)&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\fancyfoot[R]{[[content]]}</pb:template>
            </model>
            <model predicate="@rend=&#34;align(left)&#34; or @rend=&#34;margin&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\fancyfoot[L]{[[content]]}</pb:template>
            </model>
            <model predicate="@rend=&#34;indent&#34; or @rend=&#34;align(center)&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\fancyfoot[C]{[[content]]}</pb:template>
            </model>
        </modelSequence><model predicate="@rend=&#34;align(right)&#34;" behaviour="block">
            <outputRendition xml:space="preserve">
            text-align: right;
            </outputRendition>
        </model><model predicate="@rend=&#34;align(center)&#34;" behaviour="block">
            <outputRendition xml:space="preserve">
            text-align: center;
            </outputRendition>
        </model><model predicate="@rend=&#34;align(left)&#34;" behaviour="block">
            <outputRendition xml:space="preserve">
            text-align: left;
            </outputRendition>
        </model><model predicate="@rend=&#34;indent&#34;" behaviour="block">
            <outputRendition xml:space="preserve">
            text-indent: 15%;
            </outputRendition>
        </model><model behaviour="block">
            <outputRendition xml:space="preserve">
            white-space: nowrap;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="hi" mode="change"><modelSequence output="latex">
            <model predicate="@rend=&#34;align(center)&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\begin{center}
[[content]]
\end{center}</pb:template>
            </model>
            <model predicate="@rend=&#34;latin&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\textit{[[content]]}</pb:template>
            </model>
            <model predicate="@rend='underline'" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\uline{[[content]]}</pb:template>
            </model>
        </modelSequence><modelSequence output="print">
            <model predicate="@rend=&#34;align(center)&#34;" behaviour="inline">
                <outputRendition xml:space="preserve">
                text-align: center;
                </outputRendition>
            </model>
            <model predicate="@rend=&#34;latin&#34;" behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="@rend='underline'" behaviour="inline">
                <outputRendition xml:space="preserve">
                text-decoration: underline;
                </outputRendition>
            </model>
        </modelSequence><model predicate="@rend=&#34;underline&#34; and @n=&#34;2&#34;" behaviour="inline">
            <outputRendition xml:space="preserve">
            
                                    text-decoration-line: underline;
text-decoration-style: double;                    
            </outputRendition>
        </model><model predicate="@rend=&#34;superscript underline&#34;" behaviour="inline">
            <outputRendition xml:space="preserve">
            
                                
            vertical-align: super;
font-size: smaller;
text-decoration: underline;                    
            
            
            </outputRendition>
        </model><model predicate="@rend=&#34;superscript&#34;" behaviour="inline">
            <outputRendition xml:space="preserve">
            
                                
            vertical-align: super;
font-size: smaller;                    
            
            
            </outputRendition>
        </model><model predicate="@rend=&#34;align(center)&#34;" behaviour="inline">
            <outputRendition xml:space="preserve">
            text-align: center;
            </outputRendition>
        </model><model predicate="@rend=&#34;latin&#34;" behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="@rend='underline'" behaviour="inline">
            <outputRendition xml:space="preserve">
            text-decoration: underline;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="add" mode="change"><model output="latex" predicate="@hand" behaviour="inline">
            <desc>latex model</desc>
            <pb:template xmlns="" xml:space="preserve">\textsf{\hl{[[content]]}}</pb:template>
        </model><model output="fo" behaviour="inline">
            <desc>fo model</desc>
            <outputRendition xml:space="preserve">
            
                    
            color: #7F7F7F;;
font-family: cursive;            
            
            
            
            </outputRendition>
        </model><model predicate="@hand and $parameters?mode='corrections'" behaviour="alternate">
            <desc>for diplomatic view</desc>
            <param name="default" value="."/>
            <param name="alternate" value="concat(&#34;Additions made by: &#34;, id(substring-after(@hand, '#'), root($parameters?root))/p[@xml:lang=&#34;en&#34;])"/>
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if ((@rend=&#34;align(right)&#34;) or (@rend=&#34;margin(right)&#34;)) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
            <pb:template xmlns="" xml:space="preserve"><span style="[[rend]]">[[default]]</span></pb:template>
            <outputRendition xml:space="preserve">
            color: #7F7F7F;
            </outputRendition>
            <outputRendition xml:space="preserve">
            font-family: cursive;
            </outputRendition>
        </model><model predicate="$parameters?mode='corrections'" behaviour="alternate">
            <desc>for diplomatic view</desc>
            <param name="default" value="."/>
            <param name="alternate" value="&#34;Additions made by the major hand&#34;"/>
            <outputRendition xml:space="preserve">
            color: #7F7F7F;
            </outputRendition>
        </model><model behaviour="inline">
            <desc>default model</desc>
        </model></elementSpec>
                <elementSpec ident="del" mode="change"><model output="fo" behaviour="omit">
            <desc>fo output</desc>
        </model><model output="latex" predicate="@rend=&#34;strikethrough&#34;" behaviour="inline">
            <desc>latex output</desc>
            <pb:template xmlns="" xml:space="preserve">\sout{[[content]]}</pb:template>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="$parameters?mode='entities' or $parameters?mode='original'" behaviour="omit"/><model output="print" predicate="@rend=&#34;overwritten&#34;" behaviour="omit"/><model predicate="@rend='overwritten' and $parameters?mode='corrections'" behaviour="inline">
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@rend='strikethrough' and $parameters?mode='corrections'" behaviour="inline">
            <outputRendition xml:space="preserve">
            text-decoration: line-through;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="body" mode="change"><modelSequence output="epub">
            <desc>output rendition</desc>
            <model behaviour="block">
                <param name="content" value="for $n in .//place group by $ref := $n/placeName[1] order by $ref return $n"/>
            </model>
            <model behaviour="block">
                <param name="content" value="for $n in .//person group by $ref := $n/persName[1] order by $ref return $n"/>
            </model>
            <model behaviour="block">
                <param name="content" value="for $n in .//org group by $ref := $n/orgName[1] order by $ref return $n"/>
            </model>
        </modelSequence><modelSequence predicate="$parameters?mode='list'">
            <desc>rendition for list mode</desc>
            <model behaviour="block">
                <param name="content" value="for $n in .//item group by $ref := $n/name[1] order by $ref return $n"/>
            </model>
            <model behaviour="block">
                <param name="content" value="for $n in .//place group by $ref := $n/placeName[1] order by $ref return $n"/>
            </model>
            <model behaviour="block">
                <param name="content" value="for $n in .//person group by $ref := $n/persName[1] order by $ref return $n"/>
            </model>
            <model behaviour="block">
                <param name="content" value="for $n in .//org group by $ref := $n/orgName[1] order by $ref return $n"/>
            </model>
            <model behaviour="block">
                <param name="content" value="for $n in .//biblStruct group by $ref := $n order by $ref return $n"/>
            </model>
        </modelSequence><modelSequence predicate="$parameters?mode='index'">
            <desc>rendition for index mode</desc>
            <model behaviour="block">
                <param name="content" value="for $n in .//item group by $ref := $n/name[1] order by $ref return $n"/>
            </model>
            <model behaviour="block">
                <param name="content" value="for $n in .//place group by $ref := $n/placeName[1] order by $ref return $n"/>
            </model>
            <model behaviour="block">
                <param name="content" value="for $n in .//person group by $ref := $n/persName[1] order by $ref return $n"/>
            </model>
            <model behaviour="block">
                <param name="content" value="for $n in .//org group by $ref := $n/orgName[1] order by $ref return $n"/>
            </model>
            <model behaviour="block">
                <param name="content" value="for $n in .//biblStruct group by $ref := $n order by $ref return $n"/>
            </model>
        </modelSequence><modelSequence>
            <desc>default rendition</desc>
            <model behaviour="index">
                <param name="type" value="'toc'"/>
            </model>
            <model behaviour="block">
                <outputRendition xml:space="preserve">
                </outputRendition>
            </model>
        </modelSequence></elementSpec>
                <elementSpec ident="fw" mode="change"><model predicate="@type='letterhead' and @place=&#34;top(right)&#34;" behaviour="block">
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if (@rend=&#34;align(right)&#34;) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         ''))"/>
            <pb:template xmlns="" xml:space="preserve"><div style="[[rend]]">[[content]]</div></pb:template>
            <outputRendition xml:space="preserve">
            
            
            font-weight: bold;
font-size: x-large;
text-align: right;
            
            
            </outputRendition>
        </model><model predicate="@type='letterhead' and @place=&#34;top(center)&#34;" behaviour="block">
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if (@rend=&#34;align(right)&#34;) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         ''))"/>
            <pb:template xmlns="" xml:space="preserve"><div style="[[rend]]">[[content]]</div></pb:template>
            <outputRendition xml:space="preserve">
            
            
            font-weight: bold;
font-size: x-large;
text-align: center;
            
            
            </outputRendition>
        </model><model predicate="@type='letterhead'" behaviour="block">
            <outputRendition xml:space="preserve">
            
            
            font-weight: bold;
font-size: x-large;
            
            
            </outputRendition>
        </model><model predicate="ancestor::opener or ancestor::div" behaviour="inline"/><model behaviour="block"/></elementSpec>
                <elementSpec ident="unclear" mode="change"><modelSequence predicate="$parameters?mode=&#34;corrections&#34;">
            <model predicate="@reason" behaviour="alternate">
                <param name="default" value="."/>
                <param name="alternate" value="concat(&#34;The characters are unclear because the text is &#34;, @reason)"/>
                <outputRendition xml:space="preserve">
                font-weight: bold;
                </outputRendition>
            </model>
            <model predicate="not(@reason)" behaviour="alternate">
                <param name="default" value="."/>
                <param name="alternate" value="&#34;Unclear character(s)&#34;"/>
                <outputRendition xml:space="preserve">
                font-weight: bold;
                </outputRendition>
            </model>
        </modelSequence></elementSpec>
                <elementSpec ident="gap" mode="change"><model output="latex" behaviour="inline">
            <desc>latex rendition</desc>
            <param name="gap" value="@extent"/>
            <pb:template xmlns="" xml:space="preserve">[ [[gap]] ]</pb:template>
        </model><modelSequence output="epub">
            <desc>epub rendition</desc>
            <model behaviour="inline">
                <param name="gap" value="@extent"/>
                <pb:template xmlns="" xml:space="preserve">[ [[gap]] ]</pb:template>
            </model>
        </modelSequence><modelSequence output="print">
            <model behaviour="inline">
                <param name="gap" value="@extent"/>
                <pb:template xmlns="" xml:space="preserve">[ [[gap]] ]</pb:template>
            </model>
        </modelSequence><model predicate="desc and $parameters?mode='corrections'" behaviour="inline">
            <outputRendition xml:space="preserve">
            color: grey;
            </outputRendition>
        </model><model predicate="@extent and $parameters?mode='corrections'" behaviour="alternate">
            <param name="default" value="@extent"/>
            <param name="alternate" value="&#34;This is a gap in the text&#34;"/>
            <outputRendition xml:space="preserve" scope="before">
            content: '[[..';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: '..]]';
            </outputRendition>
        </model><model predicate="not(@extent) and $parameters?mode='corrections'" behaviour="alternate">
            <param name="default" value="&#34;[[...]]&#34;"/>
            <param name="alternate" value="&#34;This is a gap in the text&#34;"/>
        </model></elementSpec>
                <elementSpec ident="date" mode="change"><model predicate="text()" behaviour="inline">
            <param name="content" value="."/>
        </model><model predicate="@when" behaviour="inline">
            <param name="content" value="@when"/>
        </model><model predicate="@when-iso" behaviour="inline">
            <param name="content" value="@when-iso"/>
        </model><model predicate="@when-iso" behaviour="inline">
            <param name="content" value="format-date(@when-iso, '[MNn] [D10], [Y]', 'en', 'AD', 'GB')"/>
        </model><model predicate="parent::affiliation" behaviour="inline">
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve">([[content]])</pb:template>
        </model><model output="print" predicate="text()" behaviour="inline"/><model output="print" predicate="@when and not(text())" behaviour="inline">
            <param name="content" value="@when"/>
        </model></elementSpec>
                <elementSpec ident="floatingText" mode="change"><model behaviour="block">
            <outputRendition xml:space="preserve">
            margin: 6pt; border: solid black 1pt;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="label" mode="change"><model predicate="$parameters?mode='index'" behaviour="block"/><model predicate="parent::item" behaviour="inline">
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if (@rend=&#34;align(right)&#34;) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         ''))"/>
            <pb:template xmlns="" xml:space="preserve"><span style="[[rend]]">[[content]]</span></pb:template>
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model><model predicate="parent::list" behaviour="inline">
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if (@rend=&#34;align(right)&#34;) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         ''))"/>
            <pb:template xmlns="" xml:space="preserve"><span style="[[rend]]">[[content]]</span></pb:template>
        </model></elementSpec>
                <elementSpec ident="postscript" mode="change"><model behaviour="block">
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if ((@rend=&#34;align(right)&#34;) or (@rend=&#34;margin(right)&#34;)) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
            <pb:template xmlns="" xml:space="preserve"><div style="[[rend]]">[[content]]</div></pb:template>
        </model></elementSpec>
                <elementSpec ident="encodingDesc" mode="change"><model behaviour="omit"/></elementSpec>
                <elementSpec ident="fileDesc" mode="change"><model predicate="$parameters?header='short'" behaviour="block" cssClass="header-short">
            <desc>filedesc for shorter header</desc>
            <param name="content" value="titleStmt"/>
        </model><model behaviour="title">
            <param name="content" value="titleStmt"/>
        </model></elementSpec>
                <elementSpec ident="revisionDesc" mode="change"><model predicate="$parameters?header='short' and @status" behaviour="block" cssClass="header-short">
            <param name="content" value="if (@status=&#34;annotation_in_progress&#34;) then 'Annotation in progress' else  (if (@status=&#34;raw_transcription&#34;) then 'Raw transcription' else      (if (@status=&#34;final_transcription&#34;) then 'Final transcription' else         ''))"/>
            <pb:template xmlns="" xml:space="preserve">Status: [[content]]</pb:template>
        </model><model behaviour="omit"/></elementSpec>
                <elementSpec ident="cell" mode="change"><model behaviour="cell">
            <desc>Insert table cell. </desc>
        </model></elementSpec>
                <elementSpec ident="row" mode="change"><model predicate="@role='label'" behaviour="row">
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model><model behaviour="row">
            <desc>Insert table row. </desc>
        </model></elementSpec>
                <elementSpec ident="table" mode="change"><model predicate="@rend=&#34;align(center)&#34;" behaviour="table">
            <outputRendition xml:space="preserve">
            
            
            padding: 1em;
text-align: center;
            
            
            </outputRendition>
        </model><model behaviour="table">
            <outputRendition xml:space="preserve">
            padding: 1em;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="list" mode="change"><model behaviour="list">
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if (@rend=&#34;align(right)&#34;) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
            <pb:template xmlns="" xml:space="preserve"><ul style="[[rend]]">[[content]]</ul></pb:template>
        </model></elementSpec>
                <elementSpec ident="item" mode="change"><modelSequence predicate="$parameters?mode='facets'">
            <model predicate="not(descendant::link)" behaviour="webcomponent">
                <param name="name" value="'pb-highlight'"/>
                <param name="content" value="name[1]"/>
                <param name="key" value="@xml:id"/>
                <param name="subscribe" value="'letter'"/>
                <param name="emit" value="'index'"/>
                <pb:template xmlns="" xml:space="preserve">[[content]]</pb:template>
                <outputRendition xml:space="preserve">
                margin-bottom: 0;
font-weight: bold;
font-size: large;
                </outputRendition>
            </model>
            <model predicate="descendant::link" behaviour="webcomponent">
                <param name="name" value="'pb-highlight'"/>
                <param name="content" value="name[1]"/>
                <param name="key" value="@xml:id"/>
                <param name="subscribe" value="'letter'"/>
                <param name="emit" value="'index'"/>
                <param name="term" value=".//link/@target"/>
                <pb:template xmlns="" xml:space="preserve"><a href="[[term]]" target="_blank">[[content]]</a></pb:template>
                <outputRendition xml:space="preserve">
                margin-bottom: 0;
font-weight: bold;
font-size: large;
                </outputRendition>
            </model>
        </modelSequence><modelSequence predicate="$parameters?mode='index'">
            <model predicate="not(descendant::link)" behaviour="webcomponent">
                <param name="name" value="'pb-highlight'"/>
                <param name="content" value="name[1]"/>
                <param name="key" value="@xml:id"/>
                <param name="subscribe" value="'letter'"/>
                <param name="emit" value="'index'"/>
                <pb:template xmlns="" xml:space="preserve">[[content]]</pb:template>
                <outputRendition xml:space="preserve">
                margin-bottom: 0;
font-weight: bold;
font-size: large;
                </outputRendition>
            </model>
            <model predicate="descendant::link" behaviour="webcomponent">
                <param name="name" value="'pb-highlight'"/>
                <param name="content" value="name[1]"/>
                <param name="key" value="@xml:id"/>
                <param name="subscribe" value="'letter'"/>
                <param name="emit" value="'index'"/>
                <param name="term" value=".//link/@target"/>
                <pb:template xmlns="" xml:space="preserve"><a href="[[term]]" target="_blank">[[content]]</a></pb:template>
                <outputRendition xml:space="preserve">
                margin-bottom: 0;
font-weight: bold;
font-size: large;
                </outputRendition>
            </model>
        </modelSequence><model predicate="$parameters?mode='list'" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="content" value="name[1]"/>
            <param name="key" value="@xml:id"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'letter'"/>
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
            <outputRendition xml:space="preserve">
            cursor: pointer;
            </outputRendition>
        </model><model predicate="preceding-sibling::label" behaviour="inline"/><model behaviour="omit">
            <param name="style" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if (@rend=&#34;align(right)&#34;) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 10%' else '')))"/>
            <pb:template xmlns="" xml:space="preserve"><li style="[[rend]]">[[content]]</li></pb:template>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model behaviour="listItem"/></elementSpec>
                <elementSpec ident="profileDesc" mode="change"><model predicate="$parameters?mode=&#34;corresp&#34; and child::correspContext" behaviour="block">
            <param name="previous" value="correspDesc/correspContext/ref[@type='prev'][@target]"/>
            <param name="next" value="correspDesc/correspContext/ref[@type='next'][@target]"/>
            <pb:template xmlns="" xml:space="preserve"><h5>Previous letter : [[previous]]</h5>
<h5>Next letter : [[next]]</h5></pb:template>
        </model><model predicate="$parameters?header='short' and child::abstract" behaviour="block">
            <param name="content" value="abstract/p"/>
        </model><model predicate="$parameters?header='short' and child::correspDesc/correspAction[@type=&#34;sent&#34;]/placeName" behaviour="block" cssClass="header-short">
            <param name="content" value="correspDesc/correspAction[@type=&#34;sent&#34;]/placeName"/>
            <pb:template xmlns="" xml:space="preserve">Written in/Écrite à [[content]]</pb:template>
        </model><model behaviour="omit"/></elementSpec>
                <elementSpec ident="publisher" mode="change"><model predicate="ancestor::teiHeader" behaviour="omit">
            <desc>Omit if located in teiHeader. </desc>
        </model></elementSpec>
                <elementSpec ident="pubPlace" mode="change"><model predicate="ancestor::teiHeader" behaviour="omit">
            <desc>Omit if located in teiHeader. </desc>
        </model></elementSpec>
                <elementSpec ident="quote" mode="change"><model predicate="ancestor::p" behaviour="inline" useSourceRendition="true">
            <desc>If it is inside a paragraph then it is inline, otherwise it is block
                  level</desc>
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if (@rend=&#34;align(right)&#34;) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
            <pb:template xmlns="" xml:space="preserve"><span style="[[rend]]">[[content]]</span></pb:template>
            <outputRendition xml:space="preserve" scope="before">
            content: '‘';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: '’';
            </outputRendition>
        </model><model behaviour="block" useSourceRendition="true">
            <desc>If it is inside a paragraph then it is inline, otherwise it is block
                  level</desc>
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if (@rend=&#34;align(right)&#34;) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
            <pb:template xmlns="" xml:space="preserve"><div style="[[rend]]">[[content]]</div></pb:template>
            <outputRendition xml:space="preserve">
            margin-left: 10px; margin-right: 10px;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="seg" mode="change"/>
                <elementSpec ident="subst" mode="change"><model output="epub" predicate="del[@rend=&#34;overwritten&#34;] and add" behaviour="inline">
            <param name="content" value="add"/>
            <outputRendition xml:space="preserve">
            
                    
            font-family: cursive;
color: #9D9D9D;            
            
            
            
            </outputRendition>
        </model><model output="print" predicate="del[@rend=&#34;overwritten&#34;] and add" behaviour="inline">
            <param name="content" value="add"/>
        </model><model predicate="(del[@rend=&#34;overwritten&#34;] and add) and $parameters?mode=&#34;corrections&#34;" behaviour="alternate">
            <param name="default" value="add"/>
            <param name="alternate" value="concat(&#34;This text has been overwritten: &#34;, del)"/>
        </model><model predicate="del[@rend=&#34;overwritten&#34;] and add" behaviour="alternate">
            <param name="default" value="add"/>
            <param name="alternate" value="del"/>
        </model></elementSpec>
                <elementSpec ident="argument" mode="change"><model output="epub" behaviour="block">
            <desc>epub output</desc>
        </model><model behaviour="block">
            <desc>default rendition</desc>
            <outputRendition xml:space="preserve">
            margin-bottom: 0.5em;
            </outputRendition>
        </model></elementSpec>
            <elementSpec ident="titleStmt" mode="change"><model predicate="$parameters?mode='metadata-fr'" behaviour="block"/><model predicate="$parameters?mode='metadata-en'" behaviour="block"/><model output="fo" behaviour="heading">
            <param name="content" value="title[@xml:lang=&#34;en&#34;]"/>
        </model><model output="epub" behaviour="heading">
            <param name="content" value="title[@xml:lang=&#34;en&#34;]"/>
        </model><model predicate="$parameters?mode='title'" behaviour="heading">
            <param name="content" value="if (title[@xml:lang=&#34;en&#34;]) then (title[@xml:lang=&#34;en&#34;]) else (title[1])"/>
            <param name="level" value="5"/>
        </model><modelSequence output="web" predicate="$parameters?header='short'">
            <model behaviour="link">
                <param name="content" value="title[@xml:lang=&#34;en&#34;]"/>
                <param name="uri" value="$parameters?doc"/>
            </model>
            <model predicate="title[@xml:lang=&#34;de&#34;]" behaviour="block">
                <param name="content" value="title[@xml:lang=&#34;de&#34;]"/>
            </model>
            <model predicate="not(title[@xml:lang=&#34;de&#34;])" behaviour="block">
                <param name="content" value="title[@xml:lang=&#34;fr&#34;]"/>
            </model>
            <model behaviour="block">
                <param name="content" value="author/persName"/>
            </model>
            <model behaviour="block">
                <param name="content" value="author/affiliation/orgName"/>
            </model>
        </modelSequence><model output="web" behaviour="block"/></elementSpec>
                <elementSpec ident="handNote" mode="add"/>
            <elementSpec ident="licence" mode="change"><model predicate="@target" behaviour="inline">
            <param name="content" value="text()"/>
            <param name="target" value="@target"/>
            <pb:template xmlns="" xml:space="preserve"><a href="[[target]]" target="_blank">[[content]]</a></pb:template>
        </model><model behaviour="block"/></elementSpec>
                <elementSpec ident="persName" mode="add"><model predicate="ancestor::person" behaviour="block">
            <param name="content" value="."/>
        </model><model predicate="($parameters?mode=&#34;index&#34; or $parameters?mode=&#34;facets&#34;) and ancestor::org" behaviour="inline">
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
            <outputRendition xml:space="preserve">
            padding: 0;
            </outputRendition>
        </model><model predicate="$parameters?mode='facets'" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="subscribe" value="'letter'"/>
            <param name="emit" value="'facets'"/>
            <param name="content" value="if (@type=&#34;pec&#34;) then id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/pec/index/Index_person.xml&#34;)) else (if (@type=&#34;tgb&#34;) then id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/rochlitz/index/indices.xml&#34;)) else (if (@type=&#34;bi&#34;) then id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/bi/index/Personenindex.xml&#34;)) else (if (@type=&#34;ehri&#34;) then id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/ehri/index/EHRI_index_persons.xml&#34;)) else '')))"/>
            <outputRendition xml:space="preserve">
            
                    
            margin-bottom: 1em;
display: block;            
            
            
            
            </outputRendition>
        </model><model predicate="$parameters?mode='entities' and ((@type=&#34;bi&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/bi/index/Personenindex.xml&#34;))) or (@type=&#34;pec&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/pec/index/Index_person.xml&#34;))) or (@type=&#34;tgb&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/rochlitz/index/indices.xml&#34;))) or (@type=&#34;ehri&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/ehri/index/EHRI_index_persons.xml&#34;))))" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="content" value="."/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'letter'"/>
            <outputRendition xml:space="preserve">
            
                        font-weight: bold;
cursor: pointer;            
            
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="person" mode="add"><modelSequence predicate="$parameters?mode='index'">
            <model predicate="not(child::idno)" behaviour="webcomponent">
                <param name="content" value="persName[1]"/>
                <param name="name" value="'pb-highlight'"/>
                <param name="key" value="@xml:id"/>
                <param name="subscribe" value="'letter'"/>
                <param name="emit" value="'index'"/>
                <pb:template xmlns="" xml:space="preserve">[[content]]</pb:template>
                <outputRendition xml:space="preserve">
                font-weight: bold;
font-size: large;
display: block;
padding-top: 5%;
                </outputRendition>
            </model>
            <model predicate="child::idno" behaviour="webcomponent">
                <param name="name" value="'pb-highlight'"/>
                <param name="content" value="persName[1]"/>
                <param name="key" value="@xml:id"/>
                <param name="subscribe" value="'letter'"/>
                <param name="emit" value="'index'"/>
                <param name="viaf" value="idno"/>
                <pb:template xmlns="" xml:space="preserve"><a href="[[viaf]]" target="_blank">[[content]]</a></pb:template>
                <outputRendition xml:space="preserve">
                font-weight: bold;
font-size: large;
display: block;
padding-top: 5%;
                </outputRendition>
            </model>
            <model predicate="child::persName" behaviour="block">
                <param name="content" value="persName except persName[1]"/>
            </model>
            <model predicate="child::note" behaviour="block">
                <param name="content" value="note/p"/>
            </model>
            <model predicate="child::birth" behaviour="block">
                <param name="date" value="if (birth/date) then (birth/date) else &#34;??&#34;"/>
                <param name="place" value="if (birth/placeName) then (birth/placeName) else &#34;??&#34;"/>
                <pb:template xmlns="" xml:space="preserve">Born on [[date]] in [[place]]</pb:template>
                <outputRendition xml:space="preserve">
                margin-bottom: 0.2;
                </outputRendition>
            </model>
            <model predicate="child::death" behaviour="block">
                <param name="date" value="if (death/date) then (death/date) else &#34;??&#34;"/>
                <param name="place" value="if (death/placeName) then (death/placeName) else &#34;??&#34;"/>
                <pb:template xmlns="" xml:space="preserve">Died on [[date]] in [[place]]</pb:template>
            </model>
            <model predicate="child::nationality" behaviour="block">
                <param name="content" value="nationality"/>
                <pb:template xmlns="" xml:space="preserve">Nationality : [[content]]</pb:template>
            </model>
            <model predicate="child::sex" behaviour="block">
                <param name="content" value="sex"/>
                <pb:template xmlns="" xml:space="preserve">Gender : [[content]]</pb:template>
            </model>
            <model predicate="child::occupation" behaviour="block">
                <param name="content" value="string-join(occupation, '/')"/>
                <pb:template xmlns="" xml:space="preserve">Occupation : [[content]]</pb:template>
            </model>
            <model predicate="child::education" behaviour="block">
                <param name="content" value="education"/>
                <outputRendition xml:space="preserve" scope="before">
                content: 'Education:'
                </outputRendition>
            </model>
            <model predicate="child::event" behaviour="block">
                <param name="content" value="event"/>
                <outputRendition xml:space="preserve" scope="before">
                content: 'Main event(s):'
                </outputRendition>
            </model>
            <model predicate="child::affiliation" behaviour="block">
                <param name="content" value="affiliation"/>
                <outputRendition xml:space="preserve" scope="before">
                content: 'Affiliation:'
                </outputRendition>
            </model>
            <model predicate="child::bibl" behaviour="block">
                <param name="content" value="bibl"/>
                <outputRendition xml:space="preserve" scope="before">
                content: "Source: "
                </outputRendition>
            </model>
        </modelSequence><modelSequence predicate="$parameters?mode='facets'">
            <model predicate="not(child::idno)" behaviour="webcomponent">
                <param name="content" value="persName[1]"/>
                <param name="name" value="'pb-highlight'"/>
                <param name="key" value="@xml:id"/>
                <param name="subscribe" value="'letter'"/>
                <param name="emit" value="'index'"/>
                <pb:template xmlns="" xml:space="preserve">[[content]]</pb:template>
                <outputRendition xml:space="preserve">
                font-weight: bold;
font-size: large;
                </outputRendition>
            </model>
            <model predicate="child::idno" behaviour="webcomponent">
                <param name="name" value="'pb-highlight'"/>
                <param name="content" value="persName[1]"/>
                <param name="key" value="@xml:id"/>
                <param name="subscribe" value="'letter'"/>
                <param name="emit" value="'index'"/>
                <param name="viaf" value="idno"/>
                <pb:template xmlns="" xml:space="preserve"><a href="[[viaf]]" target="_blank">[[content]]</a></pb:template>
                <outputRendition xml:space="preserve">
                font-weight: bold;
font-size: large;
                </outputRendition>
            </model>
            <model predicate="child::note" behaviour="block">
                <param name="content" value="note/p"/>
            </model>
            <model predicate="child::birth" behaviour="block">
                <param name="date" value="if (birth/date) then (birth/date) else &#34;??&#34;"/>
                <param name="place" value="if (birth/placeName) then (birth/placeName) else &#34;??&#34;"/>
                <pb:template xmlns="" xml:space="preserve">Born on [[date]] in [[place]]</pb:template>
                <outputRendition xml:space="preserve">
                margin-bottom: 0.2;
                </outputRendition>
            </model>
            <model predicate="child::death" behaviour="block">
                <param name="date" value="if (death/date) then (death/date) else &#34;??&#34;"/>
                <param name="place" value="if (death/placeName) then (death/placeName) else &#34;??&#34;"/>
                <pb:template xmlns="" xml:space="preserve">Died on [[date]] in [[place]]</pb:template>
            </model>
            <model predicate="child::nationality" behaviour="block">
                <param name="content" value="nationality"/>
                <pb:template xmlns="" xml:space="preserve">Nationality : [[content]]</pb:template>
            </model>
            <model predicate="child::sex" behaviour="block">
                <param name="content" value="sex"/>
                <pb:template xmlns="" xml:space="preserve">Gender : [[content]]</pb:template>
            </model>
            <model predicate="child::occupation" behaviour="block">
                <param name="content" value="string-join(occupation, '/')"/>
                <pb:template xmlns="" xml:space="preserve">Occupation : [[content]]</pb:template>
            </model>
            <model predicate="child::education" behaviour="block">
                <param name="content" value="education"/>
                <pb:template xmlns="" xml:space="preserve">Education : [[content]]</pb:template>
            </model>
            <model predicate="child::event" behaviour="block">
                <param name="content" value="event"/>
                <pb:template xmlns="" xml:space="preserve">Main event(s) : [[content]]</pb:template>
            </model>
            <model predicate="child::affiliation" behaviour="block">
                <param name="content" value="affiliation"/>
                <outputRendition xml:space="preserve" scope="before">
                content: 'Affiliation :'
                </outputRendition>
            </model>
        </modelSequence><model predicate="$parameters?mode=&#34;relations&#34;" behaviour="omit"/><model output="fo" behaviour="section">
            <param name="content" value="persName[1]"/>
            <param name="viaf" value="idno"/>
            <param name="birthdate" value="birth/date[@when-iso]"/>
            <param name="birthplace" value="birth/placeName"/>
            <param name="deathdate" value="death/date[@when-iso]"/>
            <param name="deathplace" value="death/placeName"/>
            <param name="nation" value="nationality"/>
            <param name="gender" value="sex"/>
            <param name="occupation" value="string-join(occupation, '/')"/>
            <param name="education" value="education"/>
            <param name="event" value="event"/>
            <param name="affiliation" value="affiliation"/>
            <pb:template xmlns="" xml:space="preserve"><div>
  <h1><a href="[[viaf]]" target="_blank">[[content]]</a></h1>
                    <p>Born on [[birthdate]] in [[birthplace]]</p>
                    <p>Died on [[deathdate]] in [[deathplace]]</p>
                    <p>Nationality : [[nation]]</p>
                    <p>Gender : [[gender]]</p>
                    <p>Occupation : [[occupation]]</p>
                    <p>Education : [[education]]</p>
                    <p>Main event(s) : [[event]]</p>
                    <p>Affiliation : <ul>
                    [[affiliation]]
                    </ul></p>
                </div></pb:template>
        </model><modelSequence output="epub">
            <model behaviour="block">
                <param name="content" value="persName[1]"/>
                <param name="viaf" value="idno"/>
                <pb:template xmlns="" xml:space="preserve"><a href="[[viaf]]" target="_blank">[[content]]</a></pb:template>
                <outputRendition xml:space="preserve">
               font-weight: bold;
margin-bottom: 0.2em;
               
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="date" value="birth/date[@when-iso]"/>
                <param name="place" value="birth/placeName"/>
                <pb:template xmlns="" xml:space="preserve">Born on [[date]] in [[place]]</pb:template>
                <outputRendition xml:space="preserve">
                margin-bottom: 0.2;
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="date" value="death/date[@when-iso]"/>
                <param name="place" value="death/placeName"/>
                <pb:template xmlns="" xml:space="preserve">Died on [[date]] in [[place]]</pb:template>
            </model>
            <model behaviour="block">
                <param name="content" value="nationality"/>
                <pb:template xmlns="" xml:space="preserve">Nationality : [[content]]</pb:template>
            </model>
            <model behaviour="block">
                <param name="content" value="sex"/>
                <pb:template xmlns="" xml:space="preserve">Gender : [[content]]</pb:template>
            </model>
            <model behaviour="block">
                <param name="content" value="string-join(occupation, '/')"/>
                <pb:template xmlns="" xml:space="preserve">Occupation : [[content]]</pb:template>
            </model>
            <model behaviour="block">
                <param name="content" value="education"/>
                <pb:template xmlns="" xml:space="preserve">Education : [[content]]</pb:template>
            </model>
            <model behaviour="block">
                <param name="content" value="event"/>
                <pb:template xmlns="" xml:space="preserve">Main event(s) : [[content]]</pb:template>
            </model>
            <model behaviour="inline">
                <param name="content" value="'Affiliation :'"/>
            </model>
            <model behaviour="block">
                <param name="content" value="affiliation"/>
                <outputRendition xml:space="preserve">
               
                margin-left: 10px;
margin-bottom: 2em;
               
                </outputRendition>
            </model>
        </modelSequence><model predicate="$parameters?mode='list'" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="content" value="persName[1]"/>
            <param name="key" value="@xml:id"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'letter'"/>
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
            <outputRendition xml:space="preserve">
            cursor: pointer;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="placeName" mode="add"><model predicate="ancestor::person or ancestor::place" behaviour="inline">
            <param name="content" value="."/>
        </model><model predicate="$parameters?mode=&#34;entities&#34; and id(substring-after(@ref, '#'), root($parameters?root))/location/geo" behaviour="omit">
            <param name="name" value="'pb-geolocation'"/>
            <param name="longitude" value="tokenize(id(substring-after(@ref, '#'), root($parameters?root))/location/geo, ' ')[2]"/>
            <param name="latitude" value="tokenize(id(substring-after(@ref, '#'), root($parameters?root))/location/geo, ' ')[1]"/>
            <param name="label" value="id(substring-after(@ref, '#'), root($parameters?root))/placeName"/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'transcription'"/>
            <outputRendition xml:space="preserve">
            
            font-weight: bold;
cursor: pointer;
            
            </outputRendition>
        </model><model predicate="$parameters?mode=&#34;entities&#34; and @type=&#34;bruneau&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/maguerre/index/index_lieux_maguerre.xml&#34;))/location/geo" behaviour="webcomponent">
            <param name="name" value="'pb-geolocation'"/>
            <param name="longitude" value="tokenize(id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/maguerre/index/index_lieux_maguerre.xml&#34;))/location/geo, ' ')[2]"/>
            <param name="latitude" value="tokenize(id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/maguerre/index/index_lieux_maguerre.xml&#34;))/location/geo, ' ')[1]"/>
            <param name="label" value="id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/maguerre/index/index_lieux_maguerre.xml&#34;))/placeName"/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'transcription'"/>
            <outputRendition xml:space="preserve">
            
                                    font-weight: bold;
cursor: pointer;                    
            </outputRendition>
        </model><model predicate="$parameters?mode=&#34;entities&#34; and (@type=&#34;camp&#34; or @type=&#34;ehri&#34;) and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/ehri/index/EHRI_index_places.xml&#34;))/location/geo" behaviour="webcomponent">
            <param name="name" value="'pb-geolocation'"/>
            <param name="longitude" value="tokenize(id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/ehri/index/EHRI_index_places.xml&#34;))/location/geo, ' ')[2]"/>
            <param name="latitude" value="tokenize(id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/ehri/index/EHRI_index_places.xml&#34;))/location/geo, ' ')[1]"/>
            <param name="label" value="id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/ehri/index/EHRI_index_places.xml&#34;))/placeName"/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'transcription'"/>
            <outputRendition xml:space="preserve">
            
                                    font-weight: bold;
cursor: pointer;                    
            </outputRendition>
        </model><model predicate="$parameters?mode=&#34;entities&#34; and @type=&#34;bi&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/bi/index/Ortsindex.xml&#34;))/location/geo" behaviour="webcomponent">
            <param name="name" value="'pb-geolocation'"/>
            <param name="longitude" value="tokenize(id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/bi/index/Ortsindex.xml&#34;))/location/geo, ' ')[2]"/>
            <param name="latitude" value="tokenize(id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/bi/index/Ortsindex.xml&#34;))/location/geo, ' ')[1]"/>
            <param name="label" value="id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/bi/index/Ortsindex.xml&#34;))/placeName"/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'transcription'"/>
            <outputRendition xml:space="preserve">
            
                                    font-weight: bold;
cursor: pointer;                    
            </outputRendition>
        </model><model predicate="$parameters?mode=&#34;entities&#34; and @type=&#34;tgb&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/rochlitz/index/indices.xml&#34;))/location/geo" behaviour="webcomponent">
            <param name="name" value="'pb-geolocation'"/>
            <param name="longitude" value="tokenize(id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/rochlitz/index/indices.xml&#34;))/location/geo, ' ')[2]"/>
            <param name="latitude" value="tokenize(id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/rochlitz/index/indices.xml&#34;))/location/geo, ' ')[1]"/>
            <param name="label" value="id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/rochlitz/index/indices.xml&#34;))/placeName"/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'transcription'"/>
            <outputRendition xml:space="preserve">
            
                                    font-weight: bold;
cursor: pointer;                    
            </outputRendition>
        </model><model predicate="$parameters?mode=&#34;entities&#34; and @type=&#34;pec&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/pec/index/Index_place.xml&#34;))/location/geo" behaviour="webcomponent">
            <param name="name" value="'pb-geolocation'"/>
            <param name="longitude" value="tokenize(id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/pec/index/Index_place.xml&#34;))/location/geo, ' ')[2]"/>
            <param name="latitude" value="tokenize(id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/pec/index/Index_place.xml&#34;))/location/geo, ' ')[1]"/>
            <param name="label" value="id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/pec/index/Index_place.xml&#34;))/placeName"/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'transcription'"/>
            <outputRendition xml:space="preserve">
            
            font-weight: bold;
cursor: pointer;
            
            </outputRendition>
        </model><model predicate="@type=&#34;pec&#34; and $parameters?mode='entities'" behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/pec/index/Index_place.xml&#34;))"/>
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model><model predicate="@type=&#34;bi&#34; and $parameters?mode='entities'" behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/bi/index/Ortsindex.xml&#34;))"/>
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model><model predicate="parent::org" behaviour="inline">
            <param name="from" value="@from-iso"/>
            <param name="to" value="@notAfter-iso"/>
            <pb:template xmlns="" xml:space="preserve">[[from]]-[[to]]</pb:template>
        </model><model behaviour="inline"/></elementSpec>
                <elementSpec ident="geo" mode="add"><modelSequence>
            <model behaviour="inline">
                <param name="content" value="'Location: '"/>
            </model>
            <model behaviour="webcomponent">
                <param name="name" value="'pb-geolocation'"/>
                <param name="latitude" value="tokenize(., ' ')[1]"/>
                <param name="longitude" value="tokenize(., ' ')[2]"/>
                <param name="scroll" value="true()"/>
                <param name="content" value="."/>
                <param name="emit" value="'letter'"/>
                <param name="event" value="'click'"/>
                <outputRendition xml:space="preserve">
                                             color: #1565c0;
                cursor: pointer;                             
                </outputRendition>
            </model>
        </modelSequence></elementSpec>
                <elementSpec ident="occupation" mode="add"/>
                <elementSpec ident="affiliation" mode="add"><model predicate="ancestor::org" behaviour="inline">
            <desc>rendition if ancestor org</desc>
        </model><model predicate="@when-iso" behaviour="inline">
            <desc>rendition for @when-iso</desc>
            <param name="date" value="@when-iso"/>
            <pb:template xmlns="" xml:space="preserve"><li>[[content]] ([[date]])</li></pb:template>
            <outputRendition xml:space="preserve">
            list-style: inside circle;
            </outputRendition>
        </model><model predicate="@from-iso" behaviour="inline">
            <desc>rendition for @from-iso</desc>
            <param name="date-before" value="@from-iso"/>
            <param name="date-after" value="@to-iso"/>
            <pb:template xmlns="" xml:space="preserve"><li>[[content]] ([[date-before]]-[[date-after]])</li></pb:template>
            <outputRendition xml:space="preserve">
            list-style: inside circle;
            </outputRendition>
        </model><model behaviour="inline">
            <desc>default rendition</desc>
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
            <outputRendition xml:space="preserve">
            list-style: inside circle;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="event" mode="add"><model predicate="@when-iso" behaviour="inline">
            <param name="content" value="./p"/>
            <param name="date" value="@when-iso"/>
            <pb:template xmlns="" xml:space="preserve"><li>[[content]] ([[date]])</li></pb:template>
            <outputRendition xml:space="preserve">
            list-style: inside circle;
            </outputRendition>
        </model><model behaviour="inline">
            <param name="content" value="./p"/>
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
            <outputRendition xml:space="preserve">
            list-style: inside circle;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="place" mode="add"><modelSequence output="epub">
            <model behaviour="block">
                <param name="content" value="placeName[1]"/>
                <outputRendition xml:space="preserve">
                                                                             font-weight: bold;
margin-bottom: 0.2em;                                                             </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value="string-join(* except (location|idno), ', ')"/>
            </model>
            <model behaviour="block">
                <param name="content" value="string-join(location/address, ', ')"/>
            </model>
            <model behaviour="block">
                <param name="content" value="location/geo"/>
                <outputRendition xml:space="preserve">
                margin-bottom: 2em;
                </outputRendition>
            </model>
        </modelSequence><model output="fo" behaviour="paragraph"/><modelSequence predicate="$parameters?mode='index' and location/geo">
            <model behaviour="webcomponent">
                <param name="name" value="'pb-highlight'"/>
                <param name="content" value="placeName[1]"/>
                <param name="key" value="@xml:id"/>
                <param name="subscribe" value="'letter'"/>
                <param name="emit" value="'index'"/>
                <outputRendition xml:space="preserve">
                font-size: 18px;
font-weight: bold;
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value="string-join(* except (location|idno), ', ')"/>
            </model>
            <model behaviour="block">
                <param name="content" value="string-join(location/address, ', ')"/>
            </model>
            <model predicate="location/geo" behaviour="block">
                <param name="content" value="location/geo"/>
                <outputRendition xml:space="preserve">
                margin-bottom: 12px;
                </outputRendition>
            </model>
            <model predicate="child::bibl" behaviour="block">
                <param name="content" value="bibl"/>
                <outputRendition xml:space="preserve">
                content: "Source: "
                </outputRendition>
            </model>
        </modelSequence><model predicate="$parameters?mode='index' and not(location/geo)" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="content" value="placeName[1]"/>
            <param name="key" value="@xml:id"/>
            <param name="subscribe" value="'letter'"/>
            <param name="emit" value="'index'"/>
            <outputRendition xml:space="preserve">
            font-size: 18px;
font-weight: bold;
margin-bottom: 12px;
display: block;
            </outputRendition>
        </model><model predicate="$parameters?mode='list'" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="content" value="placeName[1]"/>
            <param name="key" value="@xml:id"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'letter'"/>
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
            <outputRendition xml:space="preserve">
            cursor: pointer;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="org" mode="add"><modelSequence predicate="$parameters?mode='facets'">
            <model predicate="not(child::idno)" behaviour="webcomponent">
                <param name="name" value="'pb-highlight'"/>
                <param name="content" value="orgName[1]"/>
                <param name="key" value="@xml:id"/>
                <param name="subscribe" value="'letter'"/>
                <param name="emit" value="'index'"/>
                <pb:template xmlns="" xml:space="preserve">[[content]]</pb:template>
                <outputRendition xml:space="preserve">
                margin-bottom: 0;
font-weight: bold;
font-size: large;
                </outputRendition>
            </model>
            <model predicate="child::idno" behaviour="webcomponent">
                <param name="name" value="'pb-highlight'"/>
                <param name="content" value="orgName[1]"/>
                <param name="key" value="@xml:id"/>
                <param name="subscribe" value="'letter'"/>
                <param name="emit" value="'index'"/>
                <param name="viaf" value="idno"/>
                <pb:template xmlns="" xml:space="preserve"><a href="[[viaf]]" target="_blank">[[content]]</a></pb:template>
                <outputRendition xml:space="preserve">
                margin-bottom: 0;
font-weight: bold;
font-size: large;
                </outputRendition>
            </model>
            <model predicate="desc" behaviour="block">
                <param name="content" value="desc[1]"/>
            </model>
            <model predicate="note" behaviour="block">
                <param name="content" value="note"/>
            </model>
            <model predicate="child::placeName/@from-iso" behaviour="block">
                <param name="content" value="string-join(placeName/* except placeName/location, ', ')"/>
                <param name="date" value="placeName"/>
                <pb:template xmlns="" xml:space="preserve">[[content]] ([[date]])</pb:template>
            </model>
            <model predicate="child::placeName/not(@from-iso)" behaviour="block">
                <param name="content" value="string-join(placeName/* except placeName/location, ', ')"/>
                <pb:template xmlns="" xml:space="preserve">[[content]]</pb:template>
            </model>
            <model predicate="placeName/location/geo" behaviour="block">
                <param name="content" value="placeName/location/geo"/>
            </model>
            <model predicate="child::persName" behaviour="inline">
                <param name="content" value="persName"/>
                <pb:template xmlns="" xml:space="preserve"><ul>[[content]]</ul></pb:template>
                <outputRendition xml:space="preserve">
                margin :0;
                </outputRendition>
            </model>
        </modelSequence><modelSequence predicate="$parameters?mode='index'">
            <model predicate="not(child::idno)" behaviour="webcomponent">
                <param name="name" value="'pb-highlight'"/>
                <param name="content" value="orgName[1]"/>
                <param name="key" value="@xml:id"/>
                <param name="subscribe" value="'letter'"/>
                <param name="emit" value="'index'"/>
                <pb:template xmlns="" xml:space="preserve">[[content]]</pb:template>
                <outputRendition xml:space="preserve">
                margin-bottom: 0;
font-weight: bold;
font-size: large;
display: block;
padding-top: 5%;
                </outputRendition>
            </model>
            <model predicate="child::idno" behaviour="webcomponent">
                <param name="name" value="'pb-highlight'"/>
                <param name="content" value="orgName[1]"/>
                <param name="key" value="@xml:id"/>
                <param name="subscribe" value="'letter'"/>
                <param name="emit" value="'index'"/>
                <param name="viaf" value="idno"/>
                <pb:template xmlns="" xml:space="preserve"><a href="[[viaf]]" target="_blank">[[content]]</a></pb:template>
                <outputRendition xml:space="preserve">
                margin-bottom: 0;
font-weight: bold;
font-size: large;
display: block;
padding-top: 5%;
                </outputRendition>
            </model>
            <model predicate="desc" behaviour="block">
                <param name="content" value="desc[1]"/>
            </model>
            <model predicate="note" behaviour="block">
                <param name="content" value="note"/>
            </model>
            <model predicate="child::placeName/@from-iso" behaviour="block">
                <param name="content" value="string-join(placeName/* except placeName/location, ', ')"/>
                <param name="date" value="placeName"/>
                <pb:template xmlns="" xml:space="preserve">[[content]] ([[date]])</pb:template>
            </model>
            <model predicate="child::placeName/not(@from-iso)" behaviour="block">
                <param name="content" value="string-join(placeName/* except placeName/location, ', ')"/>
                <pb:template xmlns="" xml:space="preserve">[[content]]</pb:template>
            </model>
            <model predicate="placeName/location/geo" behaviour="block">
                <param name="content" value="placeName/location/geo"/>
            </model>
            <model predicate="child::persName" behaviour="block">
                <param name="content" value="persName"/>
                <pb:template xmlns="" xml:space="preserve"><ul>[[content]]</ul></pb:template>
            </model>
        </modelSequence><model output="fo" behaviour="section"/><modelSequence output="epub">
            <model behaviour="block">
                <param name="content" value="orgName[1]"/>
                <param name="viaf" value="idno"/>
                <pb:template xmlns="" xml:space="preserve"><a href="[[viaf]]" target="_blank">[[content]]</a></pb:template>
                <outputRendition xml:space="preserve">
                                                                             font-weight: bold;
margin-bottom: 0.2em;                                                             </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value="desc"/>
                <outputRendition xml:space="preserve">
                margin-bottom: 0.2em;
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value="string-join(placeName/* except placeName/location, ', ')"/>
                <param name="date" value="placeName"/>
                <pb:template xmlns="" xml:space="preserve">Location : [[content]] ([[date]])</pb:template>
                <outputRendition xml:space="preserve">
                margin-bottom: 2em;
                </outputRendition>
            </model>
        </modelSequence><model predicate="$parameters?mode='list'" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="content" value="orgName[1]"/>
            <param name="key" value="@xml:id"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'letter'"/>
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
            <outputRendition xml:space="preserve">
            cursor: pointer;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="orgName" mode="add"><model predicate="ancestor::org or ancestor::place or ancestor::person" behaviour="inline">
            <param name="content" value="."/>
        </model><model predicate="$parameters?mode='facets'" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="subscribe" value="'letter'"/>
            <param name="emit" value="'facets'"/>
            <param name="content" value="if (@type=&#34;pec&#34;) then id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/pec/index/Index_organizations.xml&#34;)) else (if (@type=&#34;bi&#34;) then id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/bi/index/Organisationsindex_Gruppenindex.xml&#34;)) else (if (@type=&#34;ehri&#34;) then id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/ehri/index/EHRI_index_organizations.xml&#34;)) else ''))"/>
            <outputRendition xml:space="preserve">
            
                    
            margin-bottom: 1em;
display: block;            
            
            
            
            </outputRendition>
        </model><model predicate="$parameters?mode='entities' and ((@type=&#34;bi&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/bi/index/Organisationsindex_Gruppenindex.xml&#34;))) or (@type=&#34;pec&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/pec/index/Index_organizations.xml&#34;))) or (@type=&#34;ehri&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/ehri/index/EHRI_index_organizations.xml&#34;))))" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="content" value="."/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'letter'"/>
            <outputRendition xml:space="preserve">
            
            font-weight: bold;
cursor: pointer;
            
            </outputRendition>
        </model><model predicate="@from-iso" behaviour="inline">
            <param name="date-before" value="@from-iso"/>
            <param name="date-after" value="@to-iso"/>
            <pb:template xmlns="" xml:space="preserve">[[content]] ([[date-before]]-[[date-after]])</pb:template>
        </model></elementSpec>
                <elementSpec ident="sex" mode="add"><model predicate="@value=&#34;2&#34;" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve">Female</pb:template>
        </model><model predicate="@value=&#34;1&#34;" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve">Male</pb:template>
        </model></elementSpec>
                <elementSpec ident="gi" mode="add"><model behaviour="inline">
            <outputRendition xml:space="preserve" scope="before">
            content: '&lt;';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: '&gt;';
            </outputRendition>
            <outputRendition xml:space="preserve">
            background-color: #DFDFDF;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="specDesc" mode="add"><model behaviour="row">
            <param name="content" value="@key"/>
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
        </model></elementSpec>
                <elementSpec ident="specList" mode="add"><model behaviour="list">
            <param name="specDesc" value="specDesc"/>
            <pb:template xmlns="" xml:space="preserve"><ul>[[specDesc]]</ul></pb:template>
        </model></elementSpec>
                <elementSpec ident="egXML"><model output="epub" behaviour="block">
            <param name="content" value="text()"/>
            <outputRendition xml:space="preserve">
            
            
            font-family: monospace;
            margin: 1em 0 1em .5em;
            padding: 1em 0 1em .5em;
            white-space: pre-line;
            background-color: #F7F7F7;
            
            
            </outputRendition>
        </model><model output="web" behaviour="webcomponent">
            <param name="name" value="'pb-code-highlight'"/>
            <param name="language" value="(@language, 'xml')[1]"/>
            <param name="content" value="text()"/>
            <param name="line-numbers" value="true()"/>
            <param name="theme" value="'coy'"/>
            <outputRendition xml:space="preserve">
            margin: 2% 0;
            </outputRendition>
        </model><model behaviour="block" cssClass="programlisting"/></elementSpec>
                <elementSpec ident="val" mode="add"/>
                <elementSpec ident="att" mode="add"><model behaviour="inline">
            <desc>default rendition</desc>
            <outputRendition xml:space="preserve" scope="before">
            content: '@';
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="schemaSpec" mode="add"><model behaviour="block">
            <param name="module" value="moduleRef"/>
            <param name="element" value="elementSpec"/>
            <pb:template xmlns="" xml:space="preserve"><div>
  <h3>Modules</h3>
  <p>[[module]]</p>
  <h3>Modifications d'attributs</h3>
  <p>[[element]]</p>
</div></pb:template>
        </model></elementSpec>
                <elementSpec ident="figure" mode="change"><model behaviour="figure"/><model predicate="head or @rendition='simple:display'" behaviour="block"/></elementSpec>
                <elementSpec ident="graphic" mode="change"/>
                <elementSpec ident="moduleRef" mode="add"><modelSequence predicate="parent::schemaSpec">
            <model predicate="@except=&#34;&#34;" behaviour="inline">
                <param name="key" value="@key"/>
                <pb:template xmlns="" xml:space="preserve"><div>
  <h4>[[key]]</h4>
  <p>Tous les éléments sont inclus.</p>
</div></pb:template>
            </model>
            <model predicate="@except and not(@except=&#34;&#34;)" behaviour="inline">
                <param name="key" value="@key"/>
                <param name="except" value="@except"/>
                <pb:template xmlns="" xml:space="preserve"><div>
  <h4>[[key]]</h4>
  <p>Tous les éléments sont inclus sauf [[except]].</p>
</div></pb:template>
            </model>
            <model predicate="@include" behaviour="inline">
                <param name="key" value="@key"/>
                <param name="include" value="@include"/>
                <pb:template xmlns="" xml:space="preserve"><div>
  <h4>[[key]]</h4>
  <p>Les éléments suivants sont inclus : [[include]].</p>
</div></pb:template>
            </model>
        </modelSequence></elementSpec>
                <elementSpec ident="elementSpec" mode="add"><model predicate="@mode='change'" behaviour="inline">
            <param name="element" value="@ident"/>
            <pb:template xmlns="" xml:space="preserve"><div><p>L'élement "[[element]]" a été modifié.</p></div></pb:template>
        </model></elementSpec>
                <elementSpec ident="attDef" mode="add"/>
                <elementSpec ident="valItem" mode="add"/>
            <elementSpec ident="principal" mode="add"/>
            <elementSpec ident="eg" mode="add"><model behaviour="block">
            <outputRendition xml:space="preserve">
            
            
            font-family: monospace;
            margin: 1%;
            padding: 1%;
            white-space: pre-line;
            background-color: #FDFDFD;
            
            
            </outputRendition>
        </model></elementSpec>
            <elementSpec ident="idno" mode="add"><model predicate="@type=&#34;GND&#34;" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve">http://d-nb.info/gnd/[[content]]</pb:template>
        </model><model predicate="@type=&#34;VIAF&#34;" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve">https://viaf.org/viaf/[[content]]</pb:template>
        </model><model predicate="@type=&#34;PND&#34;" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve">http://d-nb.info/gnd/[[content]]</pb:template>
        </model></elementSpec>
            <elementSpec ident="choice" mode="change"><model predicate="$parameters?mode='corrections'" behaviour="inline">
            <param name="default" value="abbr[1]"/>
        </model><model predicate="$parameters?mode=&#34;original&#34; or $parameters?mode=&#34;entities&#34;" behaviour="inline">
            <param name="content" value="expan[1]"/>
        </model><model predicate="unclear" behaviour="inline">
            <param name="content" value="unclear[1]"/>
        </model><model output="plain" predicate="sic and corr" behaviour="inline">
            <param name="content" value="corr[1]"/>
        </model><model output="plain" predicate="orig and reg" behaviour="inline">
            <param name="content" value="reg[1]"/>
        </model><model predicate="sic and corr" behaviour="alternate">
            <param name="default" value="corr[1]"/>
            <param name="alternate" value="sic[1]"/>
        </model><model predicate="orig and reg" behaviour="alternate">
            <param name="default" value="reg[1]"/>
            <param name="alternate" value="orig[1]"/>
        </model></elementSpec>
            <elementSpec ident="stamp" mode="add"><model predicate="ancestor::additions" behaviour="inline">
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if ((@rend=&#34;align(right)&#34;) or (@rend=&#34;margin(right)&#34;)) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
            <pb:template xmlns="" xml:space="preserve"><span style="[[rend]]">[[content]]</span></pb:template>
            <outputRendition xml:space="preserve">
            background-color: #FFFFFF;
            </outputRendition>
        </model><model behaviour="block">
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if ((@rend=&#34;align(right)&#34;) or (@rend=&#34;margin(right)&#34;)) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
            <pb:template xmlns="" xml:space="preserve"><div style="[[rend]]">[[content]]</div></pb:template>
        </model></elementSpec>
            <elementSpec ident="change" mode="add"><model predicate="$parameters?mode='citation'" behaviour="inline">
            <desc>rendition for citation mode</desc>
            <param name="content" value="format-date(@when-iso, '[MNn] [D10], [Y]', 'en', 'AD', 'GB')"/>
        </model></elementSpec>
                <elementSpec ident="expan" mode="change"/>
                <elementSpec ident="availability" mode="add"/>
                <elementSpec ident="publicationStmt" mode="change"><model behaviour="inline"/></elementSpec>
                <elementSpec ident="rs" mode="change"><model predicate="$parameters?mode='facets'" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="subscribe" value="'letter'"/>
            <param name="emit" value="'facets'"/>
            <param name="content" value="if (@type=&#34;tgb&#34;) then id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/rochlitz/index/indices.xml&#34;)) else ''"/>
            <outputRendition xml:space="preserve">
            
                    
            margin-bottom: 1em;
display: block;            
            
            
            
            </outputRendition>
        </model><model predicate="$parameters?mode='entities' and @type=&#34;tgb&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/rochlitz/index/indices.xml&#34;))" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="content" value="."/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'letter'"/>
            <outputRendition xml:space="preserve">
            
            
            
            font-weight: bold;
cursor: pointer;
            
            
            </outputRendition>
        </model><model predicate="$parameters?mode='facets'" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="subscribe" value="'letter'"/>
            <param name="emit" value="'facets'"/>
            <param name="content" value="if (@type=&#34;pec_org&#34;) then id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/pec/index/Index_organizations.xml&#34;)) else (if (@type=&#34;bi_org&#34;) then id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/bi/index/Organisationsindex_Gruppenindex.xml&#34;)) else (if (@type=&#34;ehri_org&#34;) then id(substring-after(@ref, '#'), root($parameters?root)) else ''))"/>
            <outputRendition xml:space="preserve">
            
                    
            margin-bottom: 1em;
display: block;            
            
            
            
            </outputRendition>
        </model><model predicate="$parameters?mode='entities' and (@type=&#34;bi_org&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/bi/index/Organisationsindex_Gruppenindex.xml&#34;))) or (@type=&#34;pec_org&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/pec/index/Index_organizations.xml&#34;)))" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="content" value="."/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'letter'"/>
            <outputRendition xml:space="preserve">
            
            
            
            font-weight: bold;
cursor: pointer;
            
            
            </outputRendition>
        </model><model predicate="$parameters?mode='facets'" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="subscribe" value="'letter'"/>
            <param name="emit" value="'facets'"/>
            <param name="content" value="if (@type=&#34;pec_title&#34;) then id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/pec/index/Index_biblio.xml&#34;)) else (if (@type=&#34;bi_title&#34;) then id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/bi/index/Werkindex.xml&#34;)) else (if (@type=&#34;ehri_title&#34;) then id(substring-after(@ref, '#'), root($parameters?root)) else ''))"/>
            <outputRendition xml:space="preserve">
            
                    
            margin-bottom: 1em;
display: block;            
            
            
            
            </outputRendition>
        </model><model predicate="$parameters?mode='entities' and (@type=&#34;bi_title&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/bi/index/Werkindex.xml&#34;))) or (@type=&#34;pec_title&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/pec/index/Index_biblio.xml&#34;))) or (@type=&#34;ehri_title&#34; and id(substring-after(@ref, '#'), root($parameters?root)))" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="content" value="."/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'letter'"/>
            <outputRendition xml:space="preserve">
            
                                    font-weight: bold;
cursor: pointer;                    
            </outputRendition>
        </model><model predicate="$parameters?mode='facets'" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="subscribe" value="'letter'"/>
            <param name="emit" value="'facets'"/>
            <param name="content" value="if (@type=&#34;pec_person&#34;) then id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/pec/index/Index_person.xml&#34;)) else (if (@type=&#34;bi_person&#34;) then id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/bi/index/Personenindex.xml&#34;)) else (if (@type=&#34;ehri_person&#34;) then id(substring-after(@ref, '#'), root($parameters?root)) else ''))"/>
            <outputRendition xml:space="preserve">
            
            
            margin-bottom: 1em;
display: block;
            
            
            </outputRendition>
        </model><model predicate="$parameters?mode='entities' and (@type=&#34;bi_person&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/bi/index/Personenindex.xml&#34;))) or (@type=&#34;pec_person&#34; and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/pec/index/Index_person.xml&#34;))) or (@type=&#34;ehri_person&#34; and id(substring-after(@ref, '#'), root($parameters?root)))" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="content" value="."/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'letter'"/>
            <outputRendition xml:space="preserve">
            
                                    font-weight: bold;
cursor: pointer;                    
            </outputRendition>
        </model></elementSpec>
            <elementSpec ident="space" mode="add"/>
                <elementSpec ident="speaker" mode="change"><model predicate="@rend=&#34;underline&#34;" behaviour="inline">
            <outputRendition xml:space="preserve">
            text-decoration: underline;
            </outputRendition>
        </model><model behaviour="block">
            <outputRendition xml:space="preserve">
            font-style:italic;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="signed" mode="change"><modelSequence output="latex">
            <model predicate="@rend=&#34;align(right)&#34; and @hand" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">\begin{flushright}
\textsf{\hl{[[content]]}}
\end{flushright}</pb:template>
            </model>
            <model predicate="@rend=&#34;align(right)&#34; and not(@hand)" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">
\begin{flushright}
[[content]]
\end{flushright}
</pb:template>
            </model>
            <model predicate="@rend=&#34;align(center)&#34; and not(@hand)" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">
\begin{center}
[[content]]
\end{center}
</pb:template>
            </model>
            <model predicate="@rend=&#34;align(left)&#34; and not(@hand)" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">
\begin{flushleft}
[[content]]
\end{flushleft}
</pb:template>
            </model>
            <model predicate="@rend=&#34;indent&#34; and not(@hand)" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">
\hspace*{10mm} [[content]]
</pb:template>
            </model>
        </modelSequence><modelSequence output="epub">
            <model behaviour="block">
                <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if ((@rend=&#34;align(right)&#34;) or (@rend=&#34;margin(right)&#34;)) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
                <param name="hand" value="if (@hand) then 'color: #9D9D9D; font-family: cursive;' else ''"/>
                <pb:template xmlns="" xml:space="preserve"><div style="[[rend]] [[hand]]">[[content]]</div></pb:template>
                <outputRendition xml:space="preserve">
                </outputRendition>
            </model>
        </modelSequence><modelSequence output="print">
            <model predicate="@rend=&#34;indent&#34; and not(@hand)" behaviour="block">
                <outputRendition xml:space="preserve">
                text-indent: 15%;
                </outputRendition>
            </model>
            <model predicate="@rend=&#34;align(center)&#34; and not(@hand)" behaviour="block">
                <outputRendition xml:space="preserve">
                text-align:center;
                </outputRendition>
            </model>
            <model predicate="@rend=&#34;align(left)&#34; and not(@hand)" behaviour="block">
                <outputRendition xml:space="preserve">
                text-align:left;
                </outputRendition>
            </model>
            <model predicate="@rend=&#34;align(right)&#34; and not(@hand)" behaviour="block">
                <outputRendition xml:space="preserve">
                text-align:right;
                </outputRendition>
            </model>
            <model predicate="@rend=&#34;align(right)&#34; and @hand" behaviour="block">
                <outputRendition xml:space="preserve">
               color: #9D9D9D;
font-family: cursive;
text-align:right;
               
                </outputRendition>
            </model>
        </modelSequence><model predicate="@hand and $parameters?mode=&#34;corrections&#34;" behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="concat(&#34;Additions made by: &#34;, id(substring-after(@hand, '#'), root($parameters?root))/p[@xml:lang=&#34;en&#34;])"/>
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if ((@rend=&#34;align(right)&#34;) or (@rend=&#34;margin(right)&#34;)) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
            <pb:template xmlns="" xml:space="preserve"><span style="[[rend]]">[[default]]</span></pb:template>
            <outputRendition xml:space="preserve">color: #7F7F7F;
font-family: cursive;</outputRendition>
        </model><model behaviour="block">
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if ((@rend=&#34;align(right)&#34;) or (@rend=&#34;margin(right)&#34;)) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
            <pb:template xmlns="" xml:space="preserve"><div style="[[rend]]">[[content]]</div></pb:template>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model></elementSpec>
                                <elementSpec ident="address" mode="change"><model predicate="@rend='align(right)'" behaviour="block">
            <outputRendition xml:space="preserve">
            text-align: right;
            </outputRendition>
            <outputRendition xml:space="preserve">
            padding: 1em;
            </outputRendition>
        </model><model predicate="@rend='align(left)'" behaviour="block">
            <outputRendition xml:space="preserve">
            text-align: left;
            </outputRendition>
            <outputRendition xml:space="preserve">
            padding: 1em;
            </outputRendition>
        </model><model predicate="@rend='align(center)'" behaviour="block">
            <outputRendition xml:space="preserve">
            text-align: center;
            </outputRendition>
            <outputRendition xml:space="preserve">
            padding: 1em;
            </outputRendition>
        </model><model behaviour="block">
            <outputRendition xml:space="preserve">
            padding: 1em;
            </outputRendition>
        </model><model behaviour="inline">
            <pb:template xmlns="" xml:space="preserve">[[content]]</pb:template>
        </model></elementSpec>
            <elementSpec ident="item-block" mode="add"/>
                <elementSpec ident="list-block" mode="add"/>
                        <elementSpec ident="info" mode="add"/>
            <elementSpec ident="article" mode="add"/>
            <elementSpec ident="relation" mode="add"><model predicate="@mutual and $parameters?mode=&#34;index&#34;" behaviour="omit">
            <param name="relation" value="@name"/>
            <param name="person1" value="id(substring-after(@mutual, '#'), root($parameters?root))/persName"/>
            <param name="person2" value="id(substring-after(@mutual, ' #'), root($parameters?root))/persName"/>
            <pb:template xmlns="" xml:space="preserve"><li>[[relation]] : [[person1]] - [[person2]]</li></pb:template>
        </model></elementSpec>
                <elementSpec ident="listRelation" mode="add"/>
            <elementSpec ident="term" mode="add"><model predicate="$parameters?mode='facets'" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="subscribe" value="'letter'"/>
            <param name="emit" value="'facets'"/>
            <param name="content" value="id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/ehri/index/EHRI_index_terms.xml&#34;))"/>
            <outputRendition xml:space="preserve">
            
                    
            margin-bottom: 1em;
display: block;            
            
            
            
            </outputRendition>
        </model><model predicate="$parameters?mode='entities' and id(substring-after(@ref, '#'), doc(&#34;/db/apps/discholed/data/ehri/index/EHRI_index_terms.xml&#34;))" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="content" value="."/>
            <param name="key" value="substring-after(@ref, '#')"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'letter'"/>
            <outputRendition xml:space="preserve">
            
            font-weight: bold;
cursor: pointer;
            
            </outputRendition>
        </model></elementSpec>
            <elementSpec ident="monogr" mode="add"><modelSequence predicate="$parameters?mode='index'">
            <model predicate="child::author" behaviour="inline">
                <param name="content" value="string-join(author, &#34;, &#34;)"/>
                <outputRendition xml:space="preserve" scope="after">
                content : ", "
                </outputRendition>
                <outputRendition xml:space="preserve">
                font-size: 16px;
                </outputRendition>
            </model>
            <model predicate="child::editor" behaviour="inline">
                <param name="content" value="string-join(editor, &#34;, &#34;)"/>
                <outputRendition xml:space="preserve" scope="after">
                content: ", "
                </outputRendition>
                <outputRendition xml:space="preserve">
                font-size: 16px;
                </outputRendition>
            </model>
            <model predicate="child::title" behaviour="inline">
                <param name="content" value="string-join(title, &#34;, &#34;)"/>
                <outputRendition xml:space="preserve">
                font-style: italic;
font-size: 16px;
                </outputRendition>
                <outputRendition xml:space="preserve" scope="after">
                content: ", "
                </outputRendition>
            </model>
            <model predicate="child::imprint" behaviour="inline">
                <param name="content" value="imprint"/>
                <outputRendition xml:space="preserve">
                font-size: 16px;
                </outputRendition>
            </model>
        </modelSequence><modelSequence predicate="$parameters?mode='facets'">
            <model predicate="child::author" behaviour="inline">
                <param name="content" value="string-join(author, &#34;, &#34;)"/>
                <outputRendition xml:space="preserve" scope="after">
                content : ", "
                </outputRendition>
            </model>
            <model predicate="child::editor" behaviour="inline">
                <param name="content" value="string-join(editor, &#34;, &#34;)"/>
                <outputRendition xml:space="preserve" scope="after">
                content: ", "
                </outputRendition>
            </model>
            <model predicate="child::title" behaviour="inline">
                <param name="content" value="string-join(title, &#34;, &#34;)"/>
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
                <outputRendition xml:space="preserve" scope="after">
                content: ", "
                </outputRendition>
            </model>
            <model predicate="child::imprint" behaviour="inline">
                <param name="content" value="imprint"/>
                <outputRendition xml:space="preserve" scope="after">
                content: ", "
                </outputRendition>
            </model>
        </modelSequence><modelSequence predicate="$parameters?mode='list'">
            <model predicate="child::author" behaviour="inline">
                <param name="content" value="string-join(author, &#34;, &#34;)"/>
                <outputRendition xml:space="preserve" scope="after">
                content : ", "
                </outputRendition>
            </model>
            <model predicate="child::editor and not(child::author)" behaviour="inline">
                <param name="content" value="string-join(editor, &#34;, &#34;)"/>
                <outputRendition xml:space="preserve" scope="after">
                content: ", "
                </outputRendition>
            </model>
            <model predicate="child::title" behaviour="inline">
                <param name="content" value="title[1]"/>
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
        </modelSequence></elementSpec>
                <elementSpec ident="biblStruct" mode="add"><model predicate="$parameters?mode='index'" behaviour="webcomponent">
            <desc>rendition for index mode</desc>
            <param name="name" value="'pb-highlight'"/>
            <param name="content" value="."/>
            <param name="key" value="@xml:id"/>
            <param name="subscribe" value="'letter'"/>
            <param name="emit" value="'index'"/>
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
            <outputRendition xml:space="preserve">
            display: block;
padding-bottom: 1%;
            </outputRendition>
        </model><model predicate="$parameters?mode='list'" behaviour="webcomponent">
            <desc>rendition for list mode</desc>
            <param name="name" value="'pb-highlight'"/>
            <param name="content" value="."/>
            <param name="key" value="@xml:id"/>
            <param name="scroll" value="true()"/>
            <param name="emit" value="'letter'"/>
            <outputRendition xml:space="preserve">
            cursor: pointer;
display : block;
padding-bottom: 1%;
            </outputRendition>
        </model><model behaviour="block">
            <desc>default rendition</desc>
            <outputRendition xml:space="preserve">
            margin-bottom: 15px;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="editorStmt" mode="add"/>
                <elementSpec ident="imprint" mode="add"><modelSequence predicate="$parameters?mode='index' or $parameters?mode='list'">
            <model predicate="child::pubPlace/text()" behaviour="inline">
                <param name="content" value="pubPlace"/>
                <outputRendition xml:space="preserve" scope="after">
                content: ", "
                </outputRendition>
            </model>
            <model predicate="child::publisher/text()" behaviour="inline">
                <param name="content" value="publisher"/>
                <outputRendition xml:space="preserve" scope="after">
                content: ", "
                </outputRendition>
            </model>
            <model predicate="child::date[@from-iso] or child::date[@notBefore-iso]" behaviour="inline">
                <param name="content" value="date"/>
            </model>
            <model predicate="child::date[@when-iso]" behaviour="inline">
                <param name="content" value="date/@when-iso"/>
            </model>
            <model predicate="child::biblScope[@unit=&#34;page&#34;]" behaviour="inline">
                <param name="content" value="biblScope"/>
                <pb:template xmlns="" xml:space="preserve">[[content]] p.</pb:template>
            </model>
            <model predicate="child::biblScope[@unit=&#34;volume&#34;]" behaviour="inline">
                <param name="content" value="biblScope"/>
                <pb:template xmlns="" xml:space="preserve">[[content]] v.</pb:template>
            </model>
        </modelSequence></elementSpec>
                <elementSpec ident="analytic" mode="add"><modelSequence predicate="$parameters?mode='index'">
            <desc>for index mode</desc>
            <model predicate="child::author" behaviour="inline">
                <param name="content" value="string-join(author, &#34;, &#34;)"/>
                <outputRendition xml:space="preserve" scope="after">
                content : ", "
                </outputRendition>
                <outputRendition xml:space="preserve">
                font-size: 16px;
                </outputRendition>
            </model>
            <model predicate="child::editor" behaviour="inline">
                <param name="content" value="string-join(editor, &#34;, &#34;)"/>
                <outputRendition xml:space="preserve" scope="after">
                content: ", "
                </outputRendition>
                <outputRendition xml:space="preserve">
                font-size: 16px;
                </outputRendition>
            </model>
            <model predicate="child::title" behaviour="inline">
                <param name="content" value="string-join(title, &#34;, &#34;)"/>
                <outputRendition xml:space="preserve">
                font-style: italic;
font-size: 16px;
                </outputRendition>
                <outputRendition xml:space="preserve" scope="after">
                content: ", "
                </outputRendition>
            </model>
        </modelSequence><modelSequence predicate="$parameters?mode='list'">
            <desc>for list mode</desc>
            <model predicate="child::author" behaviour="inline">
                <param name="content" value="string-join(author, &#34;, &#34;)"/>
                <outputRendition xml:space="preserve" scope="after">
                content : ", "
                </outputRendition>
            </model>
            <model predicate="child::editor" behaviour="inline">
                <param name="content" value="string-join(editor, &#34;, &#34;)"/>
                <outputRendition xml:space="preserve" scope="after">
                content: ", "
                </outputRendition>
            </model>
            <model predicate="child::title" behaviour="inline">
                <param name="content" value="string-join(title, &#34;, &#34;)"/>
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
                <outputRendition xml:space="preserve" scope="after">
                content: ", "
                </outputRendition>
            </model>
        </modelSequence></elementSpec>
            <elementSpec ident="metamark" mode="add"><modelSequence output="latex">
            <desc>output rendition</desc>
            <model behaviour="inline">
                <param name="content" value="if (@style=&#34;x&#34;) then 'x' else   (if (@style=&#34;horizontal_rule&#34;) then '____________________' else    (if (@style=&#34;crosses&#34;) then '  +   +   +' else     (if (@style=&#34;dots&#34;) then '..........' else      (if (@style=&#34;line&#34;) then '----------' else       (if (@style=&#34;double_line&#34;) then '==========' else        (if (@style=&#34;vertical_rule&#34;) then '|' else         (if (@style=&#34;curved_horizontal_line&#34;) then '~~~' else                              '')))))))"/>
                <pb:template xmlns="" xml:space="preserve">
\begin{center}
[[content]]
\end{center}
</pb:template>
            </model>
        </modelSequence><model output="print" behaviour="block">
            <param name="content" value="if (@style=&#34;x&#34;) then 'x' else   (if (@style=&#34;horizontal_rule&#34;) then '____________________' else    (if (@style=&#34;crosses&#34;) then '  +   +   +' else     (if (@style=&#34;dots&#34;) then '..........' else      (if (@style=&#34;line&#34;) then '----------' else       (if (@style=&#34;double_line&#34;) then '==========' else        (if (@style=&#34;vertical_rule&#34;) then '|' else         (if (@style=&#34;curved_horizontal_line&#34;) then '~~~' else                              '')))))))"/>
            <pb:template xmlns="" xml:space="preserve">[[content]]</pb:template>
            <outputRendition xml:space="preserve">
            text-align:center;
            </outputRendition>
        </model><model behaviour="block">
            <desc>metamark/separation rendition</desc>
            <param name="content" value="if (@style=&#34;x&#34;) then 'x' else   (if (@style=&#34;horizontal_rule&#34;) then '____________________' else    (if (@style=&#34;crosses&#34;) then '  +   +   +' else     (if (@style=&#34;dots&#34;) then '..........' else      (if (@style=&#34;line&#34;) then '----------' else       (if (@style=&#34;double_line&#34;) then '==========' else        (if (@style=&#34;vertical_rule&#34;) then '|' else         (if (@style=&#34;curved_horizontal_line&#34;) then '~~~' else                              '')))))))"/>
            <param name="style" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if (@rend=&#34;align(right)&#34;) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         'text-align:center;'))"/>
            <pb:template xmlns="" xml:space="preserve"><div style="[[style]]">[[content]]</div></pb:template>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="milestone" mode="change"><model predicate="@type=&#34;line&#34;" behaviour="block">
            <pb:template xmlns="" xml:space="preserve">=====</pb:template>
            <outputRendition xml:space="preserve">
            text-align: center;
            </outputRendition>
        </model><model behaviour="inline"/></elementSpec>
            <elementSpec ident="name" mode="change"><model predicate="$parameters?mode='index'" behaviour="block"/><model behaviour="inline"/></elementSpec>
            <elementSpec ident="ref" mode="change"><model predicate="parent::bibl" behaviour="listItem">
            <param name="target" value="@target"/>
            <param name="content" value="."/>
            <pb:template xmlns="" xml:space="preserve"><a href="[[target]]" target="_blank">[[content]]</a></pb:template>
            <outputRendition xml:space="preserve">
            
            padding-left: 1em;
list-style: none;
            
            </outputRendition>
        </model><model predicate="id(substring-after(@target, '#'), root($parameters?root))/div[@type=&#34;chapter&#34;]" behaviour="omit"/><model predicate="not(@target)" behaviour="inline"/><model predicate="not(node())" behaviour="link">
            <param name="content" value="@target"/>
            <param name="uri" value="@target"/>
        </model><model behaviour="link">
            <param name="uri" value="@target"/>
        </model></elementSpec>
                <elementSpec ident="cit" mode="change"><model predicate="child::quote and child::bibl " behaviour="cit">
            <desc>cit rendition</desc>
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if (@rend=&#34;align(right)&#34;) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         ''))"/>
            <pb:template xmlns="" xml:space="preserve"><span style="[[rend]]">[[content]]</span></pb:template>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="child::quote and child::bibl" behaviour="cit">
            <desc>Insert citation </desc>
        </model></elementSpec>
                <elementSpec ident="foreign" mode="change"><model behaviour="inline">
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if (@rend=&#34;align(right)&#34;) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         ''))"/>
            <pb:template xmlns="" xml:space="preserve"><span style="[[rend]]">[[content]]</span></pb:template>
            <outputRendition xml:space="preserve">
            font-style:italic;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="supplied" mode="change"><modelSequence predicate="$parameters?mode=&#34;corrections&#34;">
            <model predicate="@reason" behaviour="alternate">
                <param name="default" value="."/>
                <param name="alternate" value="concat(&#34;The characters has been supplied because the text is &#34;, @reason)"/>
                <outputRendition xml:space="preserve" scope="before">
                content: "{{";
                </outputRendition>
                <outputRendition xml:space="preserve" scope="after">
                content: "}}";
                </outputRendition>
            </model>
            <model predicate="not(@reason)" behaviour="alternate">
                <param name="default" value="."/>
                <param name="alternate" value="&#34;The characters has been supplied&#34;"/>
                <outputRendition xml:space="preserve" scope="before">
                content: "{{";
                </outputRendition>
                <outputRendition xml:space="preserve" scope="after">
                content: "}}";
                </outputRendition>
            </model>
        </modelSequence><model predicate="parent::choice" behaviour="inline"/><model behaviour="inline"/></elementSpec>
                <elementSpec ident="trailer" mode="change"><model behaviour="block">
            <param name="rend" value="if (@rend=&#34;align(center)&#34;) then 'text-align:center;' else  (if (@rend=&#34;align(right)&#34;) then 'text-align:right;' else     (if (@rend=&#34;align(left)&#34;) then 'text-align:left;' else         (if (@rend=&#34;indent&#34;) then 'text-indent: 15%;' else '')))"/>
            <pb:template xmlns="" xml:space="preserve"><div style="[[rend]]">[[content]]</div></pb:template>
            <outputRendition xml:space="preserve">
            color: green;
            </outputRendition>
        </model></elementSpec>
            <elementSpec ident="listPerson" mode="add"/>
                <elementSpec ident="emph" mode="add"><model behaviour="inline">
            <outputRendition xml:space="preserve">
            text-decoration: underline;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="abbr" mode="change"><modelSequence predicate="@ana">
            <model predicate="$parameters?mode='corrections'" behaviour="inline">
                <param name="default" value="text()"/>
            </model>
            <model predicate="$parameters?mode=&#34;original&#34; or $parameters?mode='entities'" behaviour="inline">
                <param name="content" value="substring-after(@ana, &#34;#&#34;)"/>
            </model>
        </modelSequence></elementSpec>
            <elementSpec ident="handShift" mode="add"><model behaviour="alternate">
            <param name="default" value="&#34;[Shift in the document hand]&#34;"/>
            <param name="alternate" value="id(substring-after(@new, '#'), root($parameters?root))/p[@xml:lang=&#34;en&#34;]"/>
            <outputRendition xml:space="preserve">
            
            
            
            display: block;
font-size: smaller;
            
            
            
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="anchor" mode="change"><model predicate="preceding-sibling::delSpan" behaviour="block">
            <param name="content" value="&#34;[End of the deletion]&#34;"/>
            <outputRendition xml:space="preserve">
            font-size: smaller;
            </outputRendition>
        </model><model behaviour="anchor">
            <param name="id" value="@xml:id"/>
        </model></elementSpec>
                <elementSpec ident="delSpan" mode="add"><model behaviour="alternate">
            <param name="default" value="&#34;[From here, a large part of the text has been strikethrough]&#34;"/>
            <param name="alternate" value="id(substring-after(@hand, '#'), root($parameters?root))/p[@xml:lang=&#34;en&#34;]"/>
            <outputRendition xml:space="preserve">
            
            
            
            display: block;
font-size: smaller;
            
            
            
            </outputRendition>
        </model></elementSpec>
            <elementSpec ident="sourceDoc" mode="add"/>
                <elementSpec ident="zone" mode="add"/>
                <elementSpec ident="surfaceGrp" mode="add"/>
                <elementSpec ident="surface" mode="add"/>
            <elementSpec ident="bibl" mode="change"><model predicate="parent::person or parent::place" behaviour="inline">
            <param name="content" value="ref"/>
        </model><model predicate="parent::listBibl" behaviour="listItem"/><model behaviour="inline"/></elementSpec>
            <elementSpec ident="education" mode="add"><model behaviour="inline">
            <desc>default rendition</desc>
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
            <outputRendition xml:space="preserve">
            list-style: inside circle;
            </outputRendition>
        </model></elementSpec>
            </schemaSpec>
        </body>
    </text></TEI>